{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","redux/dialogsReducer.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","api/api.ts","redux/usersReducer.tsx","components/img/monkey.png","components/Users/Users.tsx","components/img/preloader.svg","common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/img/nullPhoto.png","components/img/gold1.jpg","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profileReducer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/img/carrot.svg","components/Header/Header.tsx","redux/authReducer.tsx","components/Header/HeaderContainer.tsx","components/Login.tsx","App.tsx","redux/reduxStore.tsx","index.tsx"],"names":["module","exports","Navbar","className","s","nav","item","navLink","activeClassName","active","to","Music","News","Settings","ADD_MESSAGE","UPDATE_NEW_MESSAGE_BODY","initialState","dialogs","id","name","messages","message","newMessageBody","dialogsReducer","state","action","type","newUserMessage","newState","push","newMessage","Message","props","DialogItem","path","dialog","Dialogs","messagesElements","dialogsPage","map","m","dialogsElements","d","dialogsItems","textAreaDialogs","onChange","e","body","currentTarget","value","updateNewMessageBody","placeholder","onClick","addMessage","withAuthRedirect","Component","this","isAuth","React","AuthRedirectComponent","DialogsContainer","connect","auth","dispatch","instance","axios","create","withCredentials","headers","baseURL","usersApi","currentPage","pageSize","get","then","response","data","userId","post","delete","headerApi","profileApi","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","FOLLOWING_IN_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","filter","Users","pagesCount","Math","ceil","pages","i","p","st","selectedPage","onPageChanged","style","width","height","src","photos","small","userPhoto","alt","disabled","some","btnFollow","unfollow","btnUnfollow","follow","status","Preloader","prealoder","UsersAPIComponent","pageNumber","getUsers","usersPage","acceptFollow","acceptUnfollow","items","totalCount","setCurrentPage","ProfileInfo","profile","aboutMe","accVK","contacts","vk","accFacebook","facebook","newPhotoUser","large","photoUser","contentImg","img1","descriptionBlock","profileBlock","fullName","profileImage","profileInfo","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","posts","likeCount","newPostText","website","twitter","instagram","github","mainLink","youtube","lookingForAJob","lookingForAJobDescription","profileReducer","newPost","newText","Post","MyPosts","postsElements","postBlock","newPostChange","updatePostChange","addPost","MyPostsContainer","profilePage","Profile","match","params","getUserProfile","WithUrlDataContainerComponent","withRouter","Header","header","logo","loginBlock","login","SET_USER_DATA","email","authReducer","HeaderContainer","getAuthUserData","resultCode","setAuthUserData","Login","App","horizontalLine","background","gridArea","verticalLine","render","UsersContainer","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,gBAAkB,iCAAiC,OAAS,wBAAwB,OAAS,0B,mBCApOD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,iBAAmB,sCAAsC,aAAe,kCAAkC,aAAe,kCAAkC,YAAc,mC,mBCAxOD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,YAAc,2BAA2B,aAAe,8B,mBCA/GD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,UAAY,6B,mBCA7DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,mBCA/DD,EAAOC,QAAU,CAAC,KAAO,qB,kBCAzBD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,uBAAuB,QAAU,0B,4JCyBnGC,EArBA,WACX,OACI,sBAAKC,UAAWC,IAAEC,IAAlB,UACI,qBAAKF,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,WAA7D,uBACJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,WAA7D,wBACJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,SAA7D,qBACJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,QAA7D,oBACJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,SAA7D,qBACJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,YAA7D,wBACJ,4B,OCVGC,EARD,WACV,OACI,yCCOOC,EARF,WACT,OACI,wCCKOC,EARE,WACb,OACI,4C,eCFFC,EAAc,cACdC,EAA0B,0BAG5BC,EAAe,CACfC,QAAS,CACL,CACIC,GAAI,EACJC,KAAM,UAEV,CACID,GAAI,EACJC,KAAM,UAEV,CACID,GAAI,EACJC,KAAM,SAEV,CACID,GAAI,EACJC,KAAM,SAEV,CACID,GAAI,EACJC,KAAM,SAGdC,SAAU,CACN,CACIF,GAAI,EACJG,QAAS,SAEb,CACIH,GAAI,EACJG,QAAS,aAEb,CACIH,GAAI,EACJG,QAAS,cAGjBC,eAAgB,iBAiCLC,EA/BQ,WAAiE,IAAhEC,EAA+D,uDAAvCR,EAAcS,EAAyB,uCAEnF,OAAQA,EAAOC,MACX,KAAKZ,EACD,IAAIa,EAA8B,CAC9BT,GAAI,EACJG,QAASI,EAAOJ,SAGhBO,EAAQ,eAAOJ,GAInB,OAHAI,EAASR,SAAT,YAAwBI,EAAMJ,UAC9BQ,EAASR,SAASS,KAAKF,GACvBC,EAASN,eAAiB,GACnBM,EACX,KAAKb,EACD,IAAIa,EAAQ,eAAOJ,GAEnB,OADAI,EAASN,eAAiBG,EAAOK,WAC1BF,EAEX,QACI,OAAOJ,I,iBC1DNO,EAAqC,SAACC,GAC/C,OACI,qBAAK7B,UAAWC,IAAEiB,QAAlB,SAA4BW,EAAMX,WCA7BY,EAA4C,SAACD,GACtD,IAAIE,EAAO,YAAcF,EAAMd,GAC/B,OACI,qBAAKf,UAAWC,IAAE+B,OAAlB,SACI,cAAC,IAAD,CAAS3B,gBAAiBJ,IAAEK,OACnBC,GAAIwB,EADb,SACoBF,EAAMb,UCoDvBiB,EAhD6B,SAACJ,GACzC,IAAIK,EAAmBL,EAAMM,YAAYlB,SAASmB,KAAI,SAACC,GAAD,OAAY,cAAC,EAAD,CAE9DtB,GAAIsB,EAAEtB,GACNG,QAASmB,EAAEnB,SAFNmB,EAAEtB,OAIPuB,EAAkBT,EAAMM,YAAYrB,QAAQsB,KAAI,SAACG,GAAD,OAAY,cAAC,EAAD,CAE5DxB,GAAIwB,EAAExB,GACNC,KAAMuB,EAAEvB,MAFHuB,EAAExB,OAaX,OACI,sBAAKf,UAAWC,IAAEa,QAAlB,UAEI,qBAAKd,UAAWC,IAAEuC,aAAlB,SACKF,IAEL,qBAAKtC,UAAWC,IAAEgB,SAAlB,SACKiB,IAEL,uBACA,sBAAKlC,UAAWC,IAAEwC,gBAAlB,UACI,8BACI,0BACIC,SAlBA,SAACC,GACjB,IAAIC,EAAOD,EAAEE,cAAcC,MAC3BjB,EAAMkB,qBAAqBH,IAiBXI,YAAY,qBACZF,MAAOjB,EAAMV,eACbH,KAAK,GACLD,GAAG,OAEX,8BACI,wBAAQkC,QA5BJ,WAChBpB,EAAMqB,WAAWrB,EAAMV,iBA2BX,kC,wCCnDPgC,EAAmB,SAACC,GAU7B,OAV+C,4JAG3C,WACI,OAAKC,KAAKxB,MAAMyB,OACT,cAACF,EAAD,eAAeC,KAAKxB,QADI,cAAC,IAAD,CAAUtB,GAAI,eAJN,GAEfgD,IAAMH,YCKtCI,EAAwBL,EAAiBlB,GAkB9BwB,EADUC,aAxBd,SAACrC,GACR,MAAO,CACHc,YAAad,EAAMc,YACnBhB,eAAgBE,EAAMc,YAAYhB,eAClCmC,OAAQjC,EAAMsC,KAAKL,WAShB,SAACM,GACR,MAAO,CACHV,WAAY,SAAC/B,GACTyC,EL+CD,CAACrC,KAAM,cAAeL,QK/CCC,KAE1B4B,qBAAsB,SAACH,GACnBgB,EL+CD,CAACrC,KAAM,0BAA2BI,WK/CDiB,QAKnBc,CAAoBF,G,QC5BvCK,E,OAAWC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,CACL,UAAW,wCAEfC,QAAS,kDAGAC,EAAW,SACXC,EAAqBC,GAC1B,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAJnBN,EAAW,SAObO,GACH,OAAOb,EAASc,KAAT,iBAAwBD,IAC1BH,MAAK,SAAAC,GACF,OAAOA,EAASC,SAVnBN,EAAW,SAaXO,GACL,OAAOb,EAASe,OAAT,iBAA0BF,IAC5BH,MAAK,SAAAC,GACF,OAAOA,EAASC,SAKnBI,EAAY,WAEjB,OAAOhB,EAASS,IAAT,WACFC,MAAK,SAAAC,GACF,OAAOA,EAASC,SAKnBK,EAAa,SACbJ,GACL,OAAOb,EAASS,IAAI,WAAaI,GAC5BH,MAAK,SAAAC,GACF,OAAOA,EAASC,SCxC1BM,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAAwB,wBAE1BxE,EAAe,CACfyE,MAAO,GACPjB,SAAU,EACVkB,gBAAiB,EACjBnB,YAAa,EACboB,YAAY,EACZC,oBAAqB,IAqEZC,EAAmB,SAACF,GAC7B,MAAO,CAACjE,KAAM6D,EAAoBI,eAEzBG,EAA0B,SAACH,EAAqBd,GACzD,MAAO,CAACnD,KAAM8D,EAAuBG,aAAYd,WAoCtCkB,EA1GM,WAAgE,IAA/DvE,EAA8D,uDAAvCR,EAAcS,EAAyB,uCAChF,OAAQA,EAAOC,MACX,KAAKwD,EACD,OAAO,2BACA1D,GADP,IAGIiE,MAAOjE,EAAMiE,MAAMlD,KAAI,SAAAyD,GACnB,OAAIA,EAAEnB,SAAWpD,EAAOoD,OACb,2BAAImB,GAAX,IAAcC,UAAU,IAErBD,OAGnB,KAAKb,EACD,OAAO,2BACA3D,GADP,IAGIiE,MAAOjE,EAAMiE,MAAMlD,KAAI,SAAAyD,GACnB,OAAIA,EAAEnB,SAAWpD,EAAOoD,OACb,2BAAImB,GAAX,IAAcC,UAAU,IAErBD,OAGnB,KAAKZ,EACD,OAAO,2BACA5D,GADP,IACciE,MAAOhE,EAAOgE,QAEhC,KAAKJ,EACD,OAAO,2BACA7D,GADP,IACc+C,YAAa9C,EAAO8C,cAEtC,KAAKe,EACD,OAAO,2BACA9D,GADP,IACckE,gBAAiBjE,EAAOiE,kBAE1C,KAAKH,EACD,OAAO,2BACA/D,GADP,IACcmE,WAAYlE,EAAOkE,aAErC,KAAKH,EACD,OAAO,2BACAhE,GADP,IAEIoE,oBAAqBnE,EAAOkE,WAAP,sBACXnE,EAAMoE,qBADK,CACgBnE,EAAOoD,SACtCrD,EAAMoE,oBAAoBM,QAAO,SAAChF,GAAD,OAAaA,GAAMO,EAAOoD,YAEzE,QACI,OAAOrD,I,kBCtEJ,OAA0B,mCCkF1B2E,GA/DyB,SAACnE,GAIrC,IAHA,IAAIoE,EAAaC,KAAKC,KAAKtE,EAAM0D,gBAC3B1D,EAAMwC,UACR+B,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAM1E,KAAK2E,GAEf,OACI,gCACI,8BACKD,EAAMhE,KAAI,SAACkE,GACR,OAAO,uBAEHtG,UAAW6B,EAAMuC,cAAgBkC,GAAKC,KAAGC,aACzCvD,QAAS,SAACN,GACNd,EAAM4E,cAAcH,IAJrB,UAMEA,EANF,MACEA,EAAI,QASpBzE,EAAMyD,MAAMlD,KAAI,SAACyD,GAAD,OAAW,gCACxB,iCACI,8BACI,cAAC,IAAD,CAAStF,GAAI,YAAcsF,EAAE9E,GAA7B,SACA,qBACI2F,MAAO,CACHC,MAAO,QACPC,OAAQ,SAEZC,IAAuB,MAAlBhB,EAAEiB,OAAOC,MAAgBlB,EAAEiB,OAAOC,MACjCC,GAAWC,IAAI,SAG7B,8BAEQpB,EAAEC,SACI,wBAAQoB,SAAUrF,EAAM4D,oBAAoB0B,MAAK,SAACpG,GAAD,OAAQA,IAAO8E,EAAE9E,MAC1Df,UAAWuG,KAAGa,UAAWnE,QAAS,WACxCpB,EAAMwF,SAASxB,EAAE9E,KAFnB,sBAKF,wBAAQmG,SAAUrF,EAAM4D,oBAAoB0B,MAAK,SAACpG,GAAD,OAAQA,IAAO8E,EAAE9E,MAC1Df,UAAWuG,KAAGe,YAAarE,QAAS,WACxCpB,EAAM0F,OAAO1B,EAAE9E,KAFnB,yBAOZ,iCACQ,8BAAM8E,EAAE7E,OACR,8BAAM6E,EAAE2B,YAEhB,iCACQ,8BAAM,uBACN,8BAAM,yBAlCgB3B,EAAE9E,WCxCrC,OAA0B,sCCa1B0G,GATG,WACd,OACI,8BACI,qBAAKZ,IAAKa,GACLT,IAAI,iBC0BfU,G,4MAMFlB,cAAgB,SAACmB,GACb,EAAK/F,MAAMgG,SAASD,EAAY,EAAK/F,MAAMwC,W,uDAL/C,WACIhB,KAAKxB,MAAMgG,SAASxE,KAAKxB,MAAMuC,YAAaf,KAAKxB,MAAMwC,Y,oBAO3D,WACI,OAAO,qCACFhB,KAAKxB,MAAM2D,WAAa,cAAC,GAAD,IAAe,KACxC,cAAC,GAAD,CACID,gBAAiBlC,KAAKxB,MAAM0D,gBAC5BlB,SAAUhB,KAAKxB,MAAMwC,SACrBD,YAAaf,KAAKxB,MAAMuC,YACxBqC,cAAepD,KAAKoD,cACpBnB,MAAOjC,KAAKxB,MAAMyD,MAClBiC,OAAQlE,KAAKxB,MAAM0F,OACnBF,SAAUhE,KAAKxB,MAAMwF,SACrB5B,oBAAqBpC,KAAKxB,MAAM4D,6B,GArBhBlC,IAAMH,WAuCvBM,gBAXJ,SAACrC,GACR,MAAO,CACHiE,MAAOjE,EAAMyG,UAAUxC,MACvBjB,SAAUhD,EAAMyG,UAAUzD,SAC1BkB,gBAAiBlE,EAAMyG,UAAUvC,gBACjCnB,YAAa/C,EAAMyG,UAAU1D,YAC7BoB,WAAYnE,EAAMyG,UAAUtC,WAC5BC,oBAAqBpE,EAAMyG,UAAUrC,uBAKzC,CACI8B,OL+Bc,SAAC7C,GACnB,OAAO,SAACd,GACJA,EAAS+B,GAAwB,EAAMjB,IACvCP,EAAgBO,GAAQH,MAAK,SAAAC,GACT,GAAZA,GACAZ,EAtCY,SAACc,GACzB,MAAO,CAACnD,KAAMwD,EAAQL,UAqCDqD,CAAarD,IAE1Bd,EAAS+B,GAAwB,EAAOjB,SKrC5C2C,SLyCgB,SAAC3C,GACrB,OAAO,SAACd,GACJA,EAAS+B,GAAwB,EAAMjB,IACvCP,EAAkBO,GAAQH,MAAK,SAAAC,GACX,GAAZA,GACAZ,EA9Cc,SAACc,GAC3B,MAAO,CAACnD,KAAMyD,EAAUN,UA6CHsD,CAAetD,IAE5Bd,EAAS+B,GAAwB,EAAOjB,SK/C5CmD,SLkBgB,SAACzD,EAAqBC,GAC1C,OAAO,SAACT,GACJA,EAAS8B,GAAiB,IAE1BvB,EAAkBC,EAAaC,GAAUE,MAAK,SAACE,GApB/B,IAACa,EAMUC,EAevB3B,EAAS8B,GAAiB,IAC1B9B,GAtBa0B,EAsBKb,EAAKwD,MArBxB,CAAC1G,KAAM0D,EAAWK,WAsBjB1B,GAjBuB2B,EAiBKd,EAAKyD,WAhBlC,CAAC3G,KAAM4D,EAAuBI,0BKRjC4C,eLIsB,SAAC/D,GAC3B,MAAO,CAAC7C,KAAM2D,EAAkBd,gBKJ5BuB,2BANOjC,CAORiE,I,oBChFQ,OAA0B,sCCA1B,OAA0B,kCCgE1BS,GAlDiC,SAACvG,GAC7C,IAAKA,EAAMwG,QACP,OAAO,cAAC,GAAD,IAEX,IAAIC,EAAUzG,EAAMwG,QAAQC,QAKxBC,EAAQ1G,EAAMwG,QAAQG,SAASC,GAK/BC,EAAc7G,EAAMwG,QAAQG,SAASG,SAOrCC,EAAe/G,EAAMwG,QAAQvB,OAAO+B,MAClChH,EAAMwG,QAAQvB,OAAO+B,MACrBC,GAEN,OACI,gCACI,8BAAK,qBAAK9I,UAAWC,KAAE8I,WAAYlC,IAAKmC,GAAM/B,IAAI,OAClD,sBAAKjH,UAAWC,KAAEgJ,iBAAlB,UACI,sBAAKjJ,UAAWC,KAAEiJ,aAAlB,UACI,8BAAMrH,EAAMwG,QAAQc,WACpB,qBAAKnJ,UAAWC,KAAEmJ,aAAlB,SACI,qBAAKvC,IAAK+B,EAAc3B,IAAI,UAIpC,qBAAKjH,UAAWC,KAAEoJ,YAAlB,SACI,+BACI,4CAAef,KACf,sCAASC,KACT,4CAAeG,iBClDjCY,GAAW,WACXC,GAAuB,uBACvBC,GAAmB,mBAErB3I,GAAe,CACf4I,MAAO,CACH,CACI1I,GAAI,EACJG,QAAS,QACTwI,UAAW,KAEf,CACI3I,GAAI,EACJG,QAAS,QACTwI,UAAW,IAEf,CACI3I,GAAI,EACJG,QAAS,QACTwI,UAAW,GAEf,CACI3I,GAAI,EACJG,QAAS,QACTwI,UAAW,IAGnBC,YAAa,gBACbtB,QAAS,CACLC,QAAS,gCACTE,SAAU,CACNG,SAAU,uCACViB,QAAS,sCACTnB,GAAI,iCACJoB,QAAS,sCACTC,UAAW,wCACXC,OAAQ,qCACRC,SAAU,uCACVC,QAAS,uCAEbd,SAAU,4BACVe,gBAAgB,EAChBC,0BAA2B,GAC3BrD,OAAQ,CACJC,MAAO,GACP8B,MAAO,IAEXnE,OAAQ,IAiDD0F,GA7CQ,WAAkE,IAAjE/I,EAAgE,uDAAvCR,GAAcS,EAAyB,uCACpF,OAAQA,EAAOC,MACX,KAAK+H,GACD,IAAIe,EAAU,CACVtJ,GAAI,EACJG,QAASI,EAAOqI,YAChBD,UAAW,GAGXjI,EAAQ,eAAOJ,GAInB,OAHAI,EAASgI,MAAT,YAAqBpI,EAAMoI,OAC3BhI,EAASgI,MAAM/H,KAAK2I,GACpB5I,EAASkI,YAAc,GAChBlI,EAEX,KAAK8H,GACD,IAAI9H,EAAQ,eAAOJ,GAEnB,OADAI,EAASkI,YAAcrI,EAAOgJ,QACvB7I,EAEX,KAAK+H,GACD,OAAO,2BAAInI,GAAX,IAAkBgH,QAAS/G,EAAO+G,UAEtC,QACI,OAAOhH,I,wCC1DJkJ,GATF,SAAC1I,GACV,OACI,sBAAK7B,UAAWC,KAAEE,KAAlB,UACI,qBAAK0G,IAZD,wFAYeI,IAAI,KAAKpF,EAAMX,QAClC,8BAAK,yCAAYW,EAAM6H,mBC2CpBc,GAtC2B,SAAC3I,GACnC,IAAI4I,EAAgB5I,EAAM4H,MAAMrH,KAAI,SAACkE,GAAD,OAAQ,cAAC,GAAD,CAExCvF,GAAIuF,EAAEvF,GACNG,QAASoF,EAAEpF,QACXwI,UAAWpD,EAAEoD,WAHRpD,EAAEvF,OAaX,OACI,sBAAKf,UAAWC,KAAEyK,UAAlB,UACI,yCACA,gCACI,8BACI,0BACIhI,SAXD,SAACC,GAChB,IAAIgI,EAAgBhI,EAAEE,cAAcC,MACpCjB,EAAM+I,iBAAiBD,IAUP7H,MAAOjB,EAAM8H,gBAErB,8BACI,wBAAQ1G,QAlBR,WACZpB,EAAMgJ,QAAQhJ,EAAM8H,cAiBR,2BAGR,qBAAK3J,UAAWC,KAAEwJ,MAAlB,SACKgB,QCANK,GADUpH,aAlBd,SAACrC,GACR,MAAO,CACHoI,MAAOpI,EAAM0J,YAAYtB,MACzBE,YAAatI,EAAM0J,YAAYpB,eAeA,CAACiB,iBHoCR,SAACN,GAC7B,MAAO,CAAC/I,KAAM,uBAAwB+I,QAASA,IGrCMO,QHiClC,SAAClB,GACpB,MAAO,CAACpI,KAAM,WAAYoI,YAAaA,KGlClBjG,CAA0C8G,IC1BpDQ,GAZ6B,SAACnJ,GAEzC,OACI,gCACI,cAAC,GAAD,2BAAiBA,GAAjB,IACawG,QAASxG,EAAMwG,WAE5B,cAAC,GAAD,QC6BR7E,GAAwBL,E,uKAvBxB,WACI,IAAIuB,EAASrB,KAAKxB,MAAMoJ,MAAMC,OAAOxG,OAChCA,IACDA,EAAS,GAEbrB,KAAKxB,MAAMsJ,eAAezG,K,oBAM9B,WAEI,OACI,8BACI,cAAC,GAAD,2BAAarB,KAAKxB,OAAlB,IACSwG,QAAShF,KAAKxB,MAAMwG,iB,GAjBd9E,IAAMH,YAmCjCgI,GAAgCC,YAAW7H,IAEhCE,gBANJ,SAACrC,GAAD,MAA8C,CACrDgH,QAAShH,EAAM0J,YAAY1C,QAC3B/E,OAAQjC,EAAMsC,KAAKL,UAIM,CAAC6H,eLgCA,SAACzG,GAC3B,OAAO,SAACd,GACJkB,EAAoBJ,GAAQH,MAAK,SAACC,GAC9BZ,EAND,CAACrC,KAAM,mBAAoB8G,QAMF7D,UKnCrBd,CAAgC0H,IC5DhC,OAA0B,mC,oBCkB1BE,GAXA,SAACzJ,GACZ,OACI,yBAAQ7B,UAAWC,KAAEsL,OAArB,UACI,qBAAK1E,IAAK2E,GAAMvE,IAAI,SAEpB,qBAAKjH,UAAWC,KAAEwL,WAAlB,SACK5J,EAAMyB,OAASzB,EAAM6J,MAChB,cAAC,IAAD,CAASnL,GAAI,SAAb,yBCThBoL,GAAgB,gBAElB9K,GAAe,CACfE,GAAI,KACJ2K,MAAO,UACPE,MAAO,KAEPtI,QAAQ,GA2BGuI,GAxBK,WAA+D,IAA9DxK,EAA6D,uDAAvCR,GAAcS,EAAyB,uCAC9E,OAAQA,EAAOC,MACX,KAAKoK,GACD,OAAO,uCACAtK,GACAC,EAAOmD,MAFd,IAGInB,QAAQ,IAEhB,QACI,OAAOjC,ICFbyK,G,uKACF,WACIzI,KAAKxB,MAAMkK,oB,oBASf,WACI,OACI,cAAC,GAAD,eAAY1I,KAAKxB,Y,GAbC0B,IAAMH,WAuBrBM,gBALF,SAACrC,GAAD,MAA8C,CACvDiC,OAAQjC,EAAMsC,KAAKL,OACnBoI,MAAOrK,EAAMsC,KAAK+H,SAGO,CAACK,gBDdC,kBAAM,SAACnI,GAClCiB,IAAmBN,MAAK,SAAAC,GACpB,GAA4B,IAAxBA,EAASwH,WAAkB,CAAC,IAAD,EACFxH,EAASC,KAA7B1D,EADsB,EACtBA,GAAI2K,EADkB,EAClBA,MAAOE,EADW,EACXA,MAChBhI,EARmB,SAAC7C,EAAY2K,EAAaE,GACrD,MAAQ,CAACrK,KAAMoK,GAAelH,KAAM,CAAC1D,KAAI2K,QAAOE,UAO/BK,CAAgBlL,EAAI2K,EAAOE,WCUjClI,CAAiCoI,ICnCjCI,GARD,WACV,OACI,8BACI,0CC0CGC,GAlCH,WACR,IAAIC,EAAiB,qBAAK1F,MAAO,CAC7BE,OAAQ,OACRyF,WAAY,oCACZC,SAAU,OAEVC,EAAe,qBAAK7F,MAAO,CAC3BC,MAAO,OACP0F,WAAY,8DACZC,SAAU,OAEd,OACI,cAAC,IAAD,UACI,sBAAKtM,UAAU,cAAf,UACKoM,EACD,cAAC,GAAD,IACA,cAAC,EAAD,IACCG,EACD,sBAAKvM,UAAU,sBAAf,UACI,cAAC,IAAD,CAAO+B,KAAK,WAAWyK,OAAQ,kBAAM,cAAC,EAAD,OAErC,cAAC,IAAD,CAAOzK,KAAK,oBAAoByK,OAAQ,kBAAM,cAAC,GAAD,OAE9C,cAAC,IAAD,CAAOzK,KAAK,SAASyK,OAAQ,kBAAM,cAACC,GAAD,OACnC,cAAC,IAAD,CAAO1K,KAAK,SAASyK,OAAQ,kBAAM,cAAC,EAAD,OACnC,cAAC,IAAD,CAAOzK,KAAK,QAAQyK,OAAQ,kBAAM,cAAC,EAAD,OAClC,cAAC,IAAD,CAAOzK,KAAK,YAAYyK,OAAQ,kBAAM,cAAC,EAAD,OACtC,cAAC,IAAD,CAAOzK,KAAK,SAASyK,OAAQ,kBAAM,cAAC,GAAD,gB,0BChCnDE,GAAWC,aAAgB,CAC3B5B,YAAaX,GACbjI,YAAaf,EACb0G,UAAWlC,EACXjC,KAAMkI,KAKNe,GAAQC,aAAYH,GAAUI,aAAgBC,OACjDC,OAAeJ,MAAQA,GACTA,UCXXK,IAAST,OACL,cAAC,IAAMU,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRO,SAASC,eAAe,W","file":"static/js/main.1f001187.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1GVEm\",\"dialogsItems\":\"Dialogs_dialogsItems__2mN3u\",\"messages\":\"Dialogs_messages__1Mzrb\",\"textAreaDialogs\":\"Dialogs_textAreaDialogs__14nSO\",\"dialog\":\"Dialogs_dialog__DzAwy\",\"active\":\"Dialogs_active__21hsj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentImg\":\"ProfileInfo_contentImg__wc8Sg\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__23XPP\",\"profileBlock\":\"ProfileInfo_profileBlock__3yisa\",\"profileImage\":\"ProfileInfo_profileImage__2Toyw\",\"profileInfo\":\"ProfileInfo_profileInfo__1HOtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFollow\":\"Users_btnFollow__1RcO0\",\"btnUnfollow\":\"Users_btnUnfollow__1M8ft\",\"selectedPage\":\"Users_selectedPage__C6Br2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1AFQB\",\"postBlock\":\"MyPosts_postBlock__3FKY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ic8i\",\"loginBlock\":\"Header_loginBlock__1uuqb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__cvmsW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1kiTy\",\"item\":\"Navbar_item__3OHr1\",\"active\":\"Navbar_active__ZMzyz\",\"navLink\":\"Navbar_navLink__1aNXk\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n//@ts-ignore\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/profile\">Profile</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/dialogs\">Messages</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/users\">Users</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/news\">News</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/music\">Music</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/settings\">Settings</NavLink></div>\r\n            <div></div>\r\n        </nav>\r\n\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import {ActionsTypes, DialogPageType, MessageType} from \"./store\";\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE'\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY'\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 6,\r\n            name: 'Dimych'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Andrey'\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'Sveta'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Sasha'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Petr'\r\n        }\r\n    ],\r\n    messages: [\r\n        {\r\n            id: 1,\r\n            message: 'Hello'\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'I am fine'\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'I am God!'\r\n        }\r\n    ],\r\n    newMessageBody: 'input message'\r\n}\r\nconst dialogsReducer = (state: DialogPageType = initialState, action: ActionsTypes) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:{\r\n            let newUserMessage: MessageType = {\r\n                id: 2,\r\n                message: action.message,\r\n            }\r\n\r\n            let newState = {...state}\r\n            newState.messages = [...state.messages]\r\n            newState.messages.push(newUserMessage)\r\n            newState.newMessageBody = ''\r\n            return newState;}\r\n        case UPDATE_NEW_MESSAGE_BODY:{\r\n            let newState = {...state}\r\n            newState.newMessageBody = action.newMessage\r\n            return newState;\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageAC = (message: string) => {\r\n    return {type: \"ADD-MESSAGE\", message: message} as const\r\n}\r\nexport const updateNewMessageBodyAC = (newMessage: string) => {\r\n    return {type: \"UPDATE-NEW-MESSAGE-BODY\", newMessage: newMessage} as const\r\n}\r\n\r\nexport default dialogsReducer;","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nexport type MessagePropsType = {\r\n    message: string\r\n    id:string\r\n}\r\nexport const Message:React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>)\r\n}","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type DialogItemPropsType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\nexport const DialogItem: React.FC<DialogItemPropsType> = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink activeClassName={s.active}\r\n                     to={path}>{props.name}\r\n            </NavLink></div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\n//@ts-ignore\r\nimport s from './Dialogs.module.css'\r\nimport {Message, MessagePropsType} from \"./Message/Message\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {DialogPageType} from \"../../redux/store\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\ntype DialogsPropsType = {\r\n    dialogsPage: DialogPageType\r\n    // dispatch: (action: ActionsTypes) => void\r\n    updateNewMessageBody: (body: string) => void\r\n    addMessage: (newMessageBody: string) => void\r\n    newMessageBody: string\r\n    isAuth: boolean\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    let messagesElements = props.dialogsPage.messages.map((m: any) => <Message\r\n        key={m.id}\r\n        id={m.id}\r\n        message={m.message}\r\n    />)\r\n    let dialogsElements = props.dialogsPage.dialogs.map((d: any) => <DialogItem\r\n        key={d.id}\r\n        id={d.id}\r\n        name={d.name}\r\n    />)\r\n\r\n    let addNewMessage = () => {\r\n        props.addMessage(props.newMessageBody)\r\n    }\r\n    let changeMessage = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.currentTarget.value\r\n        props.updateNewMessageBody(body);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <br/>\r\n            <div className={s.textAreaDialogs}>\r\n                <div>\r\n                    <textarea\r\n                        onChange={changeMessage}\r\n                        placeholder='Enter your message'\r\n                        value={props.newMessageBody}\r\n                        name=\"\"\r\n                        id=\"\"/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addNewMessage}>Add message</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport React, {Component} from \"react\";\r\n\r\ntype AuthPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport const withAuthRedirect = (Component:any) => {\r\n\r\n    class RedirectComponent extends React.Component<AuthPropsType> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}\r\n            />\r\n        }\r\n    }\r\n\r\n    return RedirectComponent\r\n}","import React from 'react';\r\nimport {RootStateType} from \"../../redux/store\";\r\nimport {addMessageAC, updateNewMessageBodyAC} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\nlet mStp = (state: RootStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageBody: state.dialogsPage.newMessageBody,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n    // (props:any) => {\r\n    // if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n    // return <Dialogs {...props}/>\r\n// }\r\nlet mDtp = (dispatch: any) => {\r\n    return {\r\n        addMessage: (newMessageBody: string) => {\r\n            dispatch(addMessageAC(newMessageBody))\r\n        },\r\n        updateNewMessageBody: (body: string) => {\r\n            dispatch(updateNewMessageBodyAC(body));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mStp, mDtp)(AuthRedirectComponent);\r\nexport default DialogsContainer;","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"b8f7d5e1-77fe-4269-97b3-181c5d205c51\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const headerApi = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n    authUser(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n","// import {v1} from \"uuid\";\r\nimport {ActionsTypes, UsersPageType, UsersType} from \"./store\";\r\nimport {usersApi} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users],\r\n                users: state.users.map(u => {\r\n                    if (u.userId === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users],\r\n                users: state.users.map(u => {\r\n                    if (u.userId === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            };\r\n        case FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id: any) => id != action.userId)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const acceptFollow = (userId: number) => {\r\n    return {type: FOLLOW, userId} as const\r\n}\r\nexport const acceptUnfollow = (userId: number) => {\r\n    return {type: UNFOLLOW, userId} as const\r\n}\r\nexport const setUsers = (users: Array<UsersType>) => {\r\n    return {type: SET_USERS, users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number) => {\r\n    return {type: SET_TOTAL_USERS_COUNT, totalUsersCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {type: TOGGLE_IS_FETCHING, isFetching} as const\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => {\r\n    return {type: FOLLOWING_IN_PROGRESS, isFetching, userId} as const\r\n}\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n\r\n        usersApi.getUsers(currentPage, pageSize).then((data: any) => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n    }\r\n}\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersApi.follow(userId).then(response => {\r\n            if (response == 0) {\r\n                dispatch(acceptFollow(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n        })\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersApi.unfollow(userId).then(response => {\r\n            if (response == 0) {\r\n                dispatch(acceptUnfollow(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n        })\r\n    }\r\n}\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/monkey.c15dfcfd.png\";","import React from 'react';\r\n// @ts-ignore\r\nimport st from './Users.module.css';\r\n// @ts-ignore\r\nimport userPhoto from '../img/monkey.png';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {FollowingInProgress, UsersPageType} from \"../../redux/store\";\r\n\r\ntype UsersPropsType = {\r\n    users: UsersPageType,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    onPageChanged: (pageNumber:number) => void\r\n    followingInProgress: Array<FollowingInProgress>\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n}\r\n\r\nconst Users: React.FC<UsersPropsType> = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount\r\n        / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map((p) => {\r\n                    return <span\r\n                        key={p + 1}\r\n                        className={props.currentPage === p && st.selectedPage}\r\n                        onClick={(e) => {\r\n                            props.onPageChanged(p)\r\n                        }}>\r\n                            {p} </span>\r\n                })}\r\n\r\n            </div>\r\n            {props.users.map((u:any) => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                        <img\r\n                            style={{\r\n                                width: '100px',\r\n                                height: '100px',\r\n                            }}\r\n                            src={u.photos.small != null ? u.photos.small\r\n                                : userPhoto} alt=\"\"/>\r\n                                </NavLink>\r\n                        </div>\r\n                    <div>\r\n                        {\r\n                            u.followed\r\n                                ? <button disabled={props.followingInProgress.some((id) => id === u.id)}\r\n                                          className={st.btnFollow} onClick={() => {\r\n                                    props.unfollow(u.id)\r\n                                }}>Unfollow</button>\r\n                                :\r\n                                <button disabled={props.followingInProgress.some((id) => id === u.id)}\r\n                                        className={st.btnUnfollow} onClick={() => {\r\n                                    props.follow(u.id)\r\n                                }}>Follow</button>\r\n                        }\r\n                            </div>\r\n                            </span>\r\n                    <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                            </span>\r\n                    <span>\r\n                            <div>{'u.location.country'}</div>\r\n                            <div>{'u.location.city'}</div>\r\n                            </span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.447b3e37.svg\";","import React from 'react';\r\n// @ts-ignore\r\nimport prealoder from '../../components/img/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={prealoder}\r\n                 alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {FollowingInProgress, RootStateType, UsersPageType} from \"../../redux/store\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    getUsers\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype MapStatePropsType = {\r\n    users: UsersPageType,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<FollowingInProgress>\r\n}\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n    getUsers: (currentPage: number, pageSize: number) => void,\r\n    setCurrentPage: (pageNumber: number) => void,\r\n    setTotalUsersCount: (totalCount: number) => void,\r\n    toggleIsFetching: (isFetching: boolean) => void,\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\nexport type PropsType = OwnPropsType\r\n\r\nclass UsersAPIComponent extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mStp = (state: RootStateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nexport default connect(mStp,\r\n    {\r\n        follow,\r\n        unfollow,\r\n        getUsers,\r\n        setCurrentPage,\r\n        toggleFollowingProgress\r\n    })(UsersAPIComponent);","export default __webpack_public_path__ + \"static/media/nullPhoto.a579c343.png\";","export default __webpack_public_path__ + \"static/media/gold1.dae80333.jpg\";","import React from 'react';\r\n//@ts-ignore\r\nimport s from \"../ProfileInfo/ProfileInfo.module.css\";\r\n//@ts-ignore\r\nimport photoUser from \"../../img/nullPhoto.png\"\r\n//@ts-ignore\r\nimport img1 from \"../../img/gold1.jpg\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport {ProfileInfoType} from \"../../../redux/store\";\r\n\r\nexport type ProfilePropsType = {\r\n    profile: ProfileInfoType\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfilePropsType> = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    let aboutMe = props.profile.aboutMe\r\n    // ?\r\n    // 'Write a little about yourself' :\r\n    // props.profile.aboutMe;\r\n\r\n    let accVK = props.profile.contacts.vk\r\n    // ?\r\n    // 'Write here your account vk.com' :\r\n    // props.profile.contacts.vk;\r\n\r\n    let accFacebook = props.profile.contacts.facebook\r\n    // ?\r\n    // 'Write here your account facebook.com' :\r\n    // props.profile.contacts.facebook;\r\n\r\n    //нужно обдумать, как кнопкой менять фото\r\n\r\n    let newPhotoUser = props.profile.photos.large\r\n        ? props.profile.photos.large\r\n        : photoUser;\r\n\r\n    return (\r\n        <div>\r\n            <div><img className={s.contentImg} src={img1} alt=\"\"/></div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.profileBlock}>\r\n                    <div>{props.profile.fullName}</div>\r\n                    <div className={s.profileImage}>\r\n                        <img src={newPhotoUser} alt=\"\"/>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={s.profileInfo}>\r\n                    <ul>\r\n                        <li>About me: {aboutMe}</li>\r\n                        <li>VK: {accVK}</li>\r\n                        <li>Facebook: {accFacebook}</li>\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import {ActionsTypes, ProfileInfoType, ProfilePageType} from \"./store\";\r\nimport {profileApi} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 2,\r\n            message: 'Post1',\r\n            likeCount: 123\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'Post2',\r\n            likeCount: 22\r\n        },\r\n        {\r\n            id: 4,\r\n            message: 'Post3',\r\n            likeCount: 4\r\n        },\r\n        {\r\n            id: 5,\r\n            message: 'Post4',\r\n            likeCount: 5\r\n        },\r\n    ],\r\n    newPostText: 'input message',\r\n    profile: {\r\n        aboutMe: \"Write a little about yourself\",\r\n        contacts: {\r\n            facebook: \"Write here your account facebook.com\",\r\n            website: \"Write here your account webSite.com\",\r\n            vk: \"Write here your account vk.com\",\r\n            twitter: \"Write here your account twitter.com\",\r\n            instagram: \"Write here your account instagram.com\",\r\n            github: \"Write here your account github.com\",\r\n            mainLink: \"Write here your account mainLink.com\",\r\n            youtube: \"Write here your account youtube.com\",\r\n        },\r\n        fullName: \"Write here your full name\",\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"\",\r\n        photos: {\r\n            small: \"\",\r\n            large: \"\"\r\n        },\r\n        userId: 1\r\n    }\r\n};\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 2,\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            }\r\n\r\n            let newState = {...state}\r\n            newState.posts = [...state.posts]\r\n            newState.posts.push(newPost)\r\n            newState.newPostText = ''\r\n            return newState;\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            let newState = {...state}\r\n            newState.newPostText = action.newText\r\n            return newState;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPost = (newPostText: string) => {\r\n    return {type: 'ADD-POST', newPostText: newPostText} as const\r\n}\r\nexport const updatePostChange = (newText: string) => {\r\n    return {type: \"UPDATE-NEW-POST-TEXT\", newText: newText} as const\r\n}\r\nexport const setUserProfile = (profile: ProfileInfoType) => {\r\n    return {type: \"SET_USER_PROFILE\", profile} as const\r\n}\r\n\r\nexport const getUserProfile = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        profileApi.authUser(userId).then((response) => {\r\n            dispatch(setUserProfile(response))\r\n        })\r\n    }\r\n}\r\n\r\nexport default profileReducer","import React from 'react';\r\n// @ts-ignore\r\nimport s from './Post.module.css'\r\nconst imgLogo = 'https://image.freepik.com/free-vector/rabbit-gaming-mascot-e-sports-logo_74154-31.jpg'\r\n\r\nexport type PostPropsType = {\r\n    message: string,\r\n    likeCount: number,\r\n    id: number\r\n}\r\n\r\n\r\nconst Post = (props: PostPropsType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={imgLogo} alt=\"\"/>{props.message}\r\n            <div><span>Like {props.likeCount}</span></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\n//@ts-ignore\r\nimport s from './MyPosts.module.css'\r\nimport Post, {PostPropsType} from \"./Post/Post\";\r\n\r\n// export interface PostPropsTypes {\r\n//     message: string,\r\n//     likeCount: number,\r\n//     id: number\r\n// }\r\n\r\nexport type PostsPropsType = {\r\n    posts: Array<PostPropsType>\r\n    newPostText: string\r\n    updatePostChange: (newPostChange: string) => void\r\n    addPost: (newPostText: string) => void\r\n\r\n}\r\n// {id: 2, message: \"Post1\", likeCount: 123}\r\n// Type 'PostPropsType[]' is not assignable to type 'PostType[]'.\r\n\r\nconst MyPosts: React.FC<PostsPropsType> = (props) => {\r\n        let postsElements = props.posts.map((p) => (<Post\r\n            key={p.id}\r\n            id={p.id}\r\n            message={p.message}\r\n            likeCount={p.likeCount}/>))\r\n\r\n        let onAddPost = () => {\r\n            props.addPost(props.newPostText)\r\n        }\r\n        let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n            let newPostChange = e.currentTarget.value\r\n            props.updatePostChange(newPostChange)\r\n        }\r\n\r\n        return (\r\n            <div className={s.postBlock}>\r\n                <h3>My post</h3>\r\n                <div>\r\n                    <div>\r\n                        <textarea\r\n                            onChange={onPostChange}\r\n                            value={props.newPostText}/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onAddPost}>Add post</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n            ;\r\n    }\r\n;\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost, updatePostChange} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../redux/store\";\r\n\r\n// export type PostsPropsType = {\r\n//     store: any\r\n//     // posts: Array<PostPropsType>\r\n//     // newPostText: any\r\n//     dispatch: (action: ActionsTypes) => void\r\n\r\n// }\r\n\r\n//\r\n// const MyPostsContainer = (props: any) => {\r\n//\r\n//         let addPost = () => {\r\n//             props.dispatch(addPostAC(props.store.newPostText))\r\n//         }\r\n//         let updatePostChange = (newPostChange: string) => {\r\n//             props.dispatch(onPostChangeAC(newPostChange))\r\n//         }\r\n//         return (\r\n//             <MyPosts posts={props.store.posts}\r\n//                      updatePostChange={updatePostChange}\r\n//                      addPost={addPost}\r\n//                      newPostText={props.store.newPostText}/>\r\n//         )\r\n//     }\r\n// ;\r\nlet mStp = (state: RootStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n// let mDtp = (dispatch: Dispatch) => {\r\n//     return {\r\n//         updatePostChange: (newPostChange: string) => {\r\n//             dispatch(updatePostChange(newPostChange))\r\n//         },\r\n//         addPost: (newPostText: string) => {\r\n//             dispatch(addPost(newPostText))\r\n//         }\r\n//     }\r\n// }\r\n\r\nconst MyPostsContainer = connect(mStp, {updatePostChange,addPost})(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileInfoType} from \"../../redux/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport type ProfilePropsType = {\r\n    profile: ProfileInfoType\r\n}\r\n\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo {...props}\r\n                         profile={props.profile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {ProfileInfoType, RootStateType} from \"../../redux/store\";\r\nimport {getUserProfile} from \"../../redux/profileReducer\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype PathParamsType = {\r\n    userId: number\r\n}\r\ntype MapStatePropsType = {\r\n    profile: ProfileInfoType\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    // setUserProfile: (response: ProfileInfoType) => void\r\n}\r\nexport type PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = 2\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        // profileApi.authUser(userId).then((response) => {\r\n        //     this.props.setUserProfile(response)\r\n        // })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\n//     (props:any) => {\r\n//     if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n//     return <ProfileContainer {...props}/>\r\n// }\r\n\r\nlet mstp = (state: RootStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    isAuth: state.auth.isAuth\r\n})\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\nexport default connect(mstp, {getUserProfile})(WithUrlDataContainerComponent);","export default __webpack_public_path__ + \"static/media/carrot.70e68396.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n//@ts-ignore\r\nimport logo from '../img/carrot.svg';\r\n//@ts-ignore\r\nimport s from './Header.module.css'\r\n\r\nconst Header = (props: any) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src={logo} alt=\"logo\"/>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? props.login\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>)\r\n}\r\nexport default Header;","// import {v1} from \"uuid\";\r\nimport {ActionsTypes, AuthUserType, UsersPageType, UsersType} from \"./store\";\r\nimport {headerApi} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: 'myLogin',\r\n    email: null,\r\n    // isFetching: false\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state: AuthUserType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAuthUserData = (id: string, login: null, email: null) => {\r\n    return ({type: SET_USER_DATA, data: {id, login, email}}) as const\r\n}\r\n\r\nexport const getAuthUserData = () => (dispatch: Dispatch) => {\r\n    headerApi.authMe().then(response => {\r\n        if (response.resultCode === 0) {\r\n            let {id, login, email} = response.data;\r\n            dispatch(setAuthUserData(id, login, email))\r\n        }\r\n    })\r\n}\r\nexport default authReducer;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n//@ts-ignore\r\nimport logo from '../img/carrot.svg';\r\n//@ts-ignore\r\nimport s from './Header.module.css'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/authReducer\";\r\nimport {RootStateType} from \"../../redux/store\";\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n}\r\ntype MapDispatchPropsType = {\r\n    getAuthUserData: () => void,\r\n}\r\ntype PropsType = OwnPropsType\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n        // headerApi.authMe().then(response => {\r\n        //         if (response.resultCode === 0) {\r\n        //             let {id, login, email} = response.data;\r\n        //             this.props.setAuthUserData(id, login, email)\r\n        //         }\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mstp = (state: RootStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mstp, {getAuthUserData})(HeaderContainer);","import React from 'react';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login\";\n\nconst App = () => {\n    let horizontalLine = <div style={{\n        height: '10px',\n        background: 'linear-gradient(#000000, #ffd700)',\n        gridArea: \"q\",\n    }}></div>\n    let verticalLine = <div style={{\n        width: '10px',\n        background: 'linear-gradient(to left, rgb(246 196 79), rgb(255, 215, 0))',\n        gridArea: \"w\",\n    }}></div>\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                {horizontalLine}\n                <HeaderContainer/>\n                <Navbar/>\n                {verticalLine}\n                <div className=\"app-wrapper-content\">\n                    <Route path='/dialogs' render={() => <DialogsContainer\n                    />}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer\n                    />}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n})\r\ntype RootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n(window as any).store = store\r\nexport default store;","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport React from \"react\";\nimport './index.css';\nimport store, {AppStateType} from \"./redux/reduxStore\";\nimport {Provider} from \"react-redux\";\n\n// export let renderTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n// }\n\n// store.subscribe(() => {\n//     renderTree()\n// })\n// renderTree()"],"sourceRoot":""}