{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogsReducer.tsx","components/img/preloader.svg","common/Preloader/Preloader.tsx","api/api.ts","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","components/img/carrot.svg","components/Header/Header.tsx","redux/authReducer.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","utils/objectHelpers.tsx","redux/usersReducer.tsx","components/img/monkey.png","components/Users/User.tsx","common/Pagination/Pagination.tsx","components/Users/Users.tsx","redux/usersSelectors.ts","components/Users/UsersContainer.tsx","redux/appReducer.tsx","redux/reduxStore.tsx","hoc/WithSuspense.tsx","App.tsx","index.tsx","common/FormsControls/FormsControls.tsx","common/FormsControls/FormsControls.module.css","components/Header/Header.module.css","utils/validators/validators.ts","components/Users/Users.module.css","redux/profileReducer.tsx"],"names":["module","exports","ADD_MESSAGE","initialState","dialogs","id","name","messages","message","addMessageAC","type","dialogsReducer","state","action","newUserMessage","newState","push","Preloader","src","prealoder","alt","instance","axios","create","withCredentials","headers","baseURL","usersApi","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","headerApi","authMe","login","email","password","rememberMe","captcha","logout","profileApi","authUser","getStatus","updateStatus","status","put","savePhotos","photoFile","formData","FormData","append","Navbar","className","s","nav","item","navLink","activeClassName","active","to","Music","News","Settings","Header","props","header","logo","loginBlock","btnStylePosition","isAuth","btnStyle","onClick","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","style","formContainer","onSubmit","createField","required","Input","display","formSummaryError","length","stopSubmit","_error","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","FOLLOWING_IN_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","acceptFollow","acceptUnfollow","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","filter","User","user","width","height","photos","small","userPhoto","disabled","some","st","btnFollow","btnUnfollow","Pagination","page","pageCount","productTotalCount","getPage","paginationStyle","title","buttonStyle","pages","selectStyle","lastPage","Math","ceil","i","background","color","cursor","p","margin","minHeight","justifyContent","alignItems","flexDirection","marginLeft","marginRight","Users","totalItemsCount","onPageChanged","fontSize","textShadow","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","compose","bind","totalCount","INITIALIZED_SUCCESS","initialized","initializeApp","promise","Promise","all","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","PATH","App","catchAllUnhandleError","addEventListener","removeEventListener","horizontalLine","verticalLine","exact","path","render","from","AppContainer","withRouter","JSApp","ReactDOM","document","getElementById","FormControl","input","meta","touched","children","hasError","styles","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO","posts","likeCount","profile","aboutMe","contacts","facebook","website","vk","twitter","instagram","github","mainLink","youtube","fullName","lookingForAJob","lookingForAJobDescription","large","addPost","newPostText","setStatus","getUserProfile","savePhoto","file","newPost","postId"],"mappings":"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","file":"static/js/main.3da6030e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1kiTy\",\"item\":\"Navbar_item__3OHr1\",\"active\":\"Navbar_active__ZMzyz\",\"navLink\":\"Navbar_navLink__1aNXk\"};","import {ActionsTypes, DialogPageType, MessageType} from \"./store\";\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE'\r\n// const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY'\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 6,\r\n            name: 'Dimych'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Andrey'\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'Sveta'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Sasha'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Petr'\r\n        }\r\n    ],\r\n    messages: [\r\n        {\r\n            id: 1,\r\n            message: 'Hello'\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'I am fine'\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'I am God!'\r\n        }\r\n    ],\r\n    // newMessageBody: 'input message'\r\n}\r\nconst dialogsReducer = (state: DialogPageType = initialState, action: ActionsTypes) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:{\r\n            let newUserMessage: MessageType = {\r\n                id: 2,\r\n                message: action.message,\r\n            }\r\n\r\n            let newState = {...state}\r\n            newState.messages = [...state.messages]\r\n            newState.messages.push(newUserMessage)\r\n            // newState.newMessageBody = ''\r\n            return newState;}\r\n    //     case UPDATE_NEW_MESSAGE_BODY:{\r\n    //         let newState = {...state}\r\n    //         newState.newMessageBody = action.newMessage\r\n    //         return newState;\r\n    //     }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageAC = (message: string) => {\r\n    return {type: \"ADD-MESSAGE\", message: message} as const\r\n}\r\n// export const updateNewMessageBodyAC = (newMessage: string) => {\r\n//     return {type: \"UPDATE-NEW-MESSAGE-BODY\", newMessage: newMessage} as const\r\n// }\r\n\r\nexport default dialogsReducer;","export default __webpack_public_path__ + \"static/media/preloader.447b3e37.svg\";","import React from 'react';\r\nimport prealoder from '../../components/img/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={prealoder}\r\n                 alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"39f6779d-eaae-4bd7-8915-a34646e60614\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0'\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const headerApi = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n    authUser(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    savePhotos(photoFile: string) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n        )\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n//@ts-ignore\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/profile\">Profile</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/dialogs\">Messages</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/users\">Users</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/news\">News</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/music\">Music</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/settings\">Settings</NavLink></div>\r\n            <div></div>\r\n        </nav>\r\n\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n// import s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","export default __webpack_public_path__ + \"static/media/carrot.70e68396.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n//@ts-ignore\r\nimport logo from '../img/carrot.svg';\r\n//@ts-ignore\r\nimport s from './Header.module.css'\r\n\r\nconst Header = (props: any) => {\r\n    return (\r\n        <header className={`${s.header}`}>\r\n            <img src={logo} alt=\"logo\"/>\r\n\r\n            <div className={`${s.loginBlock} ${s.btnStylePosition}`}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button className={s.btnStyle}\r\n                                                   onClick={props.logout}>Log out</button></div>\r\n                    : <button className={`${s.btnStyle} ${s.btnStylePosition}`}><NavLink to={'/login'}>Login</NavLink>\r\n                    </button>}\r\n            </div>\r\n        </header>)\r\n}\r\nexport default Header;","// import {v1} from \"uuid\";\r\nimport {ActionsTypes, AuthUserType} from \"./store\";\r\nimport {headerApi} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {AppThunk} from \"./reduxStore\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: '',\r\n    login: 'myLogin',\r\n    email: '',\r\n    // isFetching: false\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state: AuthUserType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAuthUserData = (id: string, login: null, email: null, isAuth: boolean) => {\r\n    return ({type: SET_USER_DATA, payload: {id, login, email, isAuth}}) as const\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    let response = await headerApi.authMe()\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunk => async dispatch => {\r\n    const response = await headerApi.login(email, password, rememberMe)\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.messages.length > 0 ? response.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n    const response = await headerApi.logout()\r\n    if (response.resultCode === 0) {\r\n        dispatch(setAuthUserData('', null, null, false))\r\n    }\r\n}\r\nexport default authReducer;","import React from 'react';\r\n// import {NavLink} from 'react-router-dom';\r\n// import logo from '../img/carrot.svg';\r\n// import s from './Header.module.css'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/authReducer\";\r\nimport {RootStateType} from \"../../redux/store\";\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n}\r\ntype MapDispatchPropsType = {\r\n    getAuthUserData: () => void,\r\n}\r\ntype PropsType = OwnPropsType\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mstp = (state: RootStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mstp, {getAuthUserData, logout})(HeaderContainer);","import React from 'react';\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n//@ts-ignore\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\"\r\n//@ts-ignore\r\n\r\ntype FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form className={style.formContainer} onSubmit={handleSubmit}>\r\n            <div>{createField(\"Email\", \"login\", [required], Input)}</div>\r\n            <div>{createField(\"Password\", \"password\",\r\n                [required], Input, {type: \"password\"})}</div>\r\n            <div style={{display: 'flex'}} > {\r\n                createField(\"null\", \"rememberMe\",\r\n                [], Input, {type: \"checkbox\"}, \"remember me\")}</div>\r\n\r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n                <div>\r\n                <button className={style.btnStyle}>Login</button>\r\n                </div>\r\n                </form>\r\n                );\r\n            }\r\n            ;\r\n            const LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\n            const Login = (props: any) => {\r\n            const onSubmit = (formData: FormDataType) => {\r\n            props.login(formData.login, formData.password, formData.rememberMe)\r\n        }\r\n            if (props.isAuth) {\r\n            return <Redirect to={\"/profile\"}/>\r\n        }\r\n            return (\r\n            <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n            );\r\n        };\r\n            const mstp = (state: any) => ({\r\n            isAuth: state.auth.isAuth\r\n        })\r\n\r\n            export default connect((mstp), {login})(Login);\r\n\r\n\r\n","export const updateObjectInArray = (items:any, itemId:any, objPropName:any, newObjProps:any) => {\r\n    items.map((u:any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","// import {v1} from \"uuid\";\r\nimport {ActionsTypes, UsersPageType, UsersType} from \"./store\";\r\nimport {usersApi} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n                // users: [...state.users],\r\n                // users: state.users.map(u => {\r\n                //     if (u.userId === action.userId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u\r\n                // })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users],\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            };\r\n        case FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id: any) => id != action.userId)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const acceptFollow = (userId: number) => {\r\n    return {type: FOLLOW, userId} as const\r\n}\r\nexport const acceptUnfollow = (userId: number) => {\r\n    return {type: UNFOLLOW, userId} as const\r\n}\r\nexport const setUsers = (users: Array<UsersType>) => {\r\n    return {type: SET_USERS, users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number) => {\r\n    return {type: SET_TOTAL_USERS_COUNT, totalUsersCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {type: TOGGLE_IS_FETCHING, isFetching} as const\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => {\r\n    return {type: FOLLOWING_IN_PROGRESS, isFetching, userId} as const\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n\r\n        const response = await usersApi.getUsers(page, pageSize)\r\n\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(response.items))\r\n        dispatch(setTotalUsersCount(response.totalCount))\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    const response = await apiMethod(userId)\r\n    if (response === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        const apiMethod = usersApi.follow.bind(usersApi)\r\n        const actionCreator = acceptFollow;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        const apiMethod = usersApi.unfollow.bind(usersApi)\r\n        const actionCreator = acceptUnfollow;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/monkey.c15dfcfd.png\";","import React from 'react';\r\n// @ts-ignore\r\nimport st from './Users.module.css';\r\n// @ts-ignore\r\nimport userPhoto from '../img/monkey.png';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {FollowingInProgress} from \"../../redux/store\";\r\n\r\ntype UserPropsType = {\r\n    user: any,\r\n    followingInProgress: Array<FollowingInProgress>\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n}\r\n\r\nconst User: React.FC<UserPropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img\r\n                            style={{\r\n                                width: '100px',\r\n                                height: '100px',\r\n                            }}\r\n                            src={user.photos.small != null ? user.photos.small\r\n                                : userPhoto} alt=\"\"/>\r\n                                </NavLink>\r\n                        </div>\r\n                    <div>\r\n                        {\r\n                            user.followed\r\n                                ? <button disabled={followingInProgress.some((id) => id === user.id)}\r\n                                          className={st.btnFollow} onClick={() => {\r\n                                    unfollow(user.id)\r\n                                }}>Unfollow</button>\r\n                                :\r\n                                <button disabled={followingInProgress.some((id: any) => id === user.id)}\r\n                                        className={st.btnUnfollow} onClick={() => {\r\n                                    follow(user.id)\r\n                                }}>Follow</button>\r\n                        }\r\n                            </div>\r\n                            </span>\r\n            <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                            </span>\r\n            <span>\r\n                            <div>{'u.location.country'}</div>\r\n                            <div>{'u.location.city'}</div>\r\n                            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React, {CSSProperties, ReactNode} from 'react';\r\nimport {isNumber} from \"util\";\r\n\r\ninterface IPaginationProps {\r\n    page: number;\r\n    pageCount: number;\r\n    productTotalCount: number;\r\n    getPage: (newPage: number, newPageCount: number) => void;\r\n\r\n    title?: ReactNode;\r\n    paginationStyle?: CSSProperties;\r\n    buttonStyle?: CSSProperties;\r\n    selectStyle?: CSSProperties;\r\n}\r\n\r\nconst Pagination: React.FC<IPaginationProps> = (\r\n    {\r\n        page, pageCount, productTotalCount, getPage,\r\n\r\n        title = 'Pagination ', paginationStyle,\r\n        buttonStyle, selectStyle\r\n    }\r\n) => {\r\n    let pages = [];\r\n    const lastPage = Math.ceil(productTotalCount / pageCount)\r\n\r\n    for (let i = 1; i <= lastPage; i++) pages.push((\r\n        <button\r\n            key={i}\r\n            style={{\r\n                background: page === i ? 'gold' : \"orange\", ...buttonStyle,\r\n                color: \"black\",\r\n                cursor: \"pointer\"\r\n            }\r\n            }\r\n            onClick={() => getPage(i, pageCount)}\r\n        >\r\n            {i}\r\n        </button>\r\n    ));\r\n\r\n    if ((page + 4) < lastPage) {\r\n        pages[page + 2] = (\r\n            <span key={page + 3} style={{\r\n                color: \"black\"\r\n            }\r\n            }>\r\n                - ... -\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < (page + 3) || i === (lastPage - 1));\r\n    }\r\n    if (page > 5) {\r\n        pages[1] = (\r\n            <span key={2} style={{\r\n                color: \"black\",\r\n                background: \"orange\",\r\n                cursor: \"pointer\"\r\n            }\r\n            }>\r\n                - ... -\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < 2 || i > page - 4);\r\n    }\r\n    const prevPage = () => {\r\n        getPage(page - 1, pageCount);\r\n        // if ((currentPage - 1) % pageNumberLimit == 0) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        // }\r\n    }\r\n    const nextPage = () => {\r\n        getPage(page + 1, pageCount);\r\n        // if (currentPage + 1 > maxPageNumberLimit) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        // }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            margin: '0 10px', minHeight: '50px', justifyContent: 'center',\r\n            alignItems: 'center', display: 'flex', ...paginationStyle, flexDirection: 'column'\r\n        }}>\r\n            {/*<div>{title} </div>*/}\r\n\r\n            <div style={{\r\n                display: 'flex'\r\n            }}>\r\n                {/*    <select value={pageCount} onChange={e => getPage(page, Number(e.currentTarget.value))}*/}\r\n                {/*           style={{*/}\r\n                {/*               ...selectStyle,*/}\r\n                {/*               marginRight: '5px'*/}\r\n                {/*           }}>*/}\r\n                {/*    <option value={4}>4</option>*/}\r\n                {/*    <option value={7}>7</option>*/}\r\n                {/*    <option value={10}>10</option>*/}\r\n                {/*    <option value={20}>20</option>*/}\r\n                {/*    <option value={50}>50</option>*/}\r\n                {/*</select>*/}\r\n                <div style={{\r\n                    marginLeft: '5px',\r\n                    marginRight: '5px',\r\n                    display: 'flex'\r\n                }}>\r\n                    <button style={{\r\n                        color: \"black\",\r\n                        background: \"orange\",\r\n                        cursor: \"pointer\"\r\n                    }\r\n                    } onClick={prevPage}>PREV\r\n                    </button>\r\n                </div>\r\n                {pages}\r\n                <div style={{\r\n                    marginLeft: '5px',\r\n                    marginRight: '5px',\r\n                    display: 'flex'\r\n                }}>\r\n                    <button style={{\r\n                        color: \"black\",\r\n                        background: \"orange\",\r\n                        cursor: \"pointer\"\r\n                    }\r\n                    } onClick={nextPage}>NEXT\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport {FollowingInProgress, UsersPageType} from \"../../redux/store\";\r\nimport User from \"./User\";\r\nimport Pagination from \"../../common/Pagination/Pagination\";\r\n\r\ntype UsersPropsType = {\r\n    users: UsersPageType,\r\n    pageSize: number,\r\n    totalItemsCount: number,\r\n    currentPage: number,\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: Array<FollowingInProgress>\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n}\r\n\r\nconst Users: React.FC<UsersPropsType> = ({\r\n                                             users, totalItemsCount,\r\n                                             pageSize, onPageChanged, currentPage, ...props\r\n                                         }) => {\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                fontSize: \"xxx-large\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                color: \"orange\",\r\n                textShadow: \"black 0 0 2px\"\r\n            }}>USERS\r\n            </div>\r\n            {/*<Paginator currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize}*/}\r\n            {/*           totalUsersCount={totalUsersCount}/>*/}\r\n            <Pagination page={currentPage} pageCount={pageSize}\r\n                        productTotalCount={totalItemsCount} getPage={onPageChanged}/>\r\n            {/*<div>*/}\r\n            {/*    {pages.map((p) => {*/}\r\n            {/*        return <span*/}\r\n            {/*            key={p + 1}*/}\r\n            {/*            className={currentPage === p && styles.selectedPage}*/}\r\n            {/*            onClick={(e) => {*/}\r\n            {/*                onPageChanged(p)*/}\r\n            {/*            }}>*/}\r\n            {/*                {p} </span>*/}\r\n            {/*    })}*/}\r\n            {/*</div>*/}\r\n            <div> {users.map((u: any) =>\r\n                <User key={u.id} user={u}\r\n                      followingInProgress={props.followingInProgress}\r\n                      follow={props.follow} unfollow={props.unfollow}/>\r\n            )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","import {RootStateType} from \"./store\";\r\n\r\nexport const getUsers = (state:RootStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state:RootStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state:RootStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state:RootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state:RootStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state:RootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {FollowingInProgress, RootStateType, UsersPageType} from \"../../redux/store\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/usersSelectors\";\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype MapStatePropsType = {\r\n    users: UsersPageType,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<FollowingInProgress>\r\n}\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n    getUsers: (currentPage: number, pageSize: number) => void,\r\n    setCurrentPage: (pageNumber: number) => void,\r\n    setTotalUsersCount: (totalCount: number) => void,\r\n    toggleIsFetching: (isFetching: boolean) => void,\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\nexport type PropsType = OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalItemsCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n// let mStp = (state: RootStateType) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\nlet mStp = (state: RootStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mStp,\r\n        {\r\n            follow,\r\n            unfollow,\r\n            getUsers: requestUsers,\r\n            setCurrentPage,\r\n            toggleFollowingProgress\r\n        })\r\n)(UsersContainer)","// import {v1} from \"uuid\";\r\nimport {ActionsTypes, AppType} from \"./store\";\r\nimport {getAuthUserData} from \"./authReducer\";\r\nimport {AppThunk} from \"./reduxStore\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n};\r\n\r\nconst appReducer = (state:AppType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const initializedSuccess = () => {\r\n    return ({type: INITIALIZED_SUCCESS}) as const\r\n}\r\n\r\nexport const initializeApp = ():AppThunk => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n\r\n\r\n}\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\nimport {ActionsTypes} from \"./store\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\ntype RootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, ActionsTypes>\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n(window as any).store = store\r\nexport default store;","import React from 'react';\r\n\r\nconst WithSuspense = (Component: any) => {\r\n\r\n    return (props: any) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n\r\n    }\r\n}\r\n;\r\n\r\nexport default WithSuspense;","import './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport React from 'react';\nimport {BrowserRouter, Route, withRouter, Switch, Redirect} from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport store, {AppStateType} from \"./redux/reduxStore\";\nimport {compose} from \"redux\";\nimport WithSuspense from \"./hoc/WithSuspense\";\nimport {Error404} from \"./common/404/Error404\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nexport const PATH = {\n    DIALOGS: '/dialogs',\n    ERROR_404: '/404',\n    LOGIN: '/login',\n    PROFILE: '/profile/:userId?',\n    USERS: '/users',\n    MUSIC: '/music',\n    NEWS: '/news',\n    SETTINGS: '/settings'\n}\n\nclass App extends React.Component<AppStateType> {\n    //диспатчить ошибку и отрисовать ее\n    catchAllUnhandleError = () => {\n    }\n\n    componentDidMount() {\n        initializeApp()\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleError)\n    }\n\n    render() {\n        let horizontalLine = <div className=\"horizontalLine\"/>\n        let verticalLine = <div className=\"verticalLine\"/>\n        // if (!this.props.initialized) {\n        //     return <Preloader/>\n        // }\n\n        return (\n            <div className=\"app-wrapper\">\n                {horizontalLine}\n                <HeaderContainer/>\n                <Navbar/>\n                {verticalLine}\n                <div className=\"app-wrapper-content\">\n                    <Switch>\n                        <Route exact path='/' render={() => <Redirect to={PATH.PROFILE}/>}/>\n                        <Route path={PATH.DIALOGS} render={WithSuspense(DialogsContainer)}/>\n                        <Route path={PATH.PROFILE} render={WithSuspense(ProfileContainer)}/>\n                        <Route path={PATH.USERS} render={() => <UsersContainer/>}/>\n                        <Route path={PATH.MUSIC} render={() => <Music/>}/>\n                        <Route path={PATH.NEWS} render={() => <News/>}/>\n                        <Route path={PATH.SETTINGS} render={() => <Settings/>}/>\n                        <Route path={PATH.LOGIN} render={() => <Login/>}/>\n                        <Route path={PATH.ERROR_404} render={() => <Redirect from={'*'} to={PATH.ERROR_404}/>}/>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mstp = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(withRouter, connect(mstp, {initializeApp}))(App);\n\nconst JSApp = (props: any) => {\n    return (<BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>)\n}\nexport default JSApp;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport './index.css';\nimport JSApp from \"./App\";\n\nReactDOM.render(\n    <JSApp/>,\n    document.getElementById('root')\n);\n","import React from 'react'\r\n//@ts-ignore\r\nimport styles from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\ntype FormType = {\r\n    input: string\r\n    child: any\r\n    meta: any\r\n}\r\n\r\nexport const FormControl: React.FC<FormType> = ({\r\n                                                    input, meta: {touched, error}\r\n                                                    , children\r\n                                                }) => {\r\n    let hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error + \" Stupid user! :)\"} </span>}\r\n        </div>\r\n    )\r\n};\r\nexport const Textarea = (props: any) => {\r\n    let {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n};\r\nexport const Input = (props: any) => {\r\n    let {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\nexport const createField = (placeholder: any, name: any, validators: any,\r\n                            component: any, props = {}, text = \"\") => {\r\n    return <>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n\r\n        /> <span>{text}</span>\r\n    </>\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3VvqF\",\"error\":\"FormsControls_error__2htib\",\"formSummaryError\":\"FormsControls_formSummaryError__3s1EN\",\"btnStyle\":\"FormsControls_btnStyle__1EygT\",\"checkboxContainer\":\"FormsControls_checkboxContainer__1rzwV\",\"formContainer\":\"FormsControls_formContainer__3LZSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ic8i\",\"loginBlock\":\"Header_loginBlock__1uuqb\",\"btnStyle\":\"Header_btnStyle__n1B1_\",\"btnStylePosition\":\"Header_btnStylePosition__sr_VD\"};","import React from 'react';\r\n\r\nexport const required = (value: string) => {\r\n    if (value) return undefined\r\n    return (\"Field is required\");\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value:string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbol`\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFollow\":\"Users_btnFollow__1RcO0\",\"btnUnfollow\":\"Users_btnUnfollow__1M8ft\"};","import {ActionsTypes, ProfileInfoType, ProfilePageType} from \"./store\";\r\nimport {profileApi} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst DELETE_POST = \"DELETE_POST\"\r\nconst SAVE_PHOTO = \"SAVE_PHOTO\"\r\n// const UPDATE_STATUS = \"UPDATE_STATUS\"\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 2,\r\n            message: 'Post1',\r\n            likeCount: 123\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'Post2',\r\n            likeCount: 22\r\n        },\r\n        {\r\n            id: 4,\r\n            message: 'Post3',\r\n            likeCount: 4\r\n        },\r\n        {\r\n            id: 5,\r\n            message: 'Post4',\r\n            likeCount: 5\r\n        },\r\n    ],\r\n    // newPostText: 'input message',\r\n    profile: {\r\n        aboutMe: \"Write a little about yourself\",\r\n        contacts: {\r\n            facebook: \"Write here your account facebook.com\",\r\n            website: \"Write here your account webSite.com\",\r\n            vk: \"Write here your account vk.com\",\r\n            twitter: \"Write here your account twitter.com\",\r\n            instagram: \"Write here your account instagram.com\",\r\n            github: \"Write here your account github.com\",\r\n            mainLink: \"Write here your account mainLink.com\",\r\n            youtube: \"Write here your account youtube.com\",\r\n        },\r\n        fullName: \"Write here your full name\",\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"\",\r\n        photos: {\r\n            small: \"\",\r\n            large: \"\"\r\n        },\r\n        userId: 1\r\n    },\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 2,\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            }\r\n\r\n            let newState = {...state}\r\n            newState.posts = [...state.posts]\r\n            newState.posts.push(newPost)\r\n            // newState.newPostText = ''\r\n            return newState;\r\n        }\r\n        // case UPDATE_NEW_POST_TEXT: {\r\n        //     let newState = {...state}\r\n        //     newState.newPostText = action.newText\r\n        //     return newState;\r\n        // }\r\n        case SET_STATUS: {\r\n            let newState = {...state}\r\n            newState.status = action.status\r\n            return newState;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)};\r\n        }\r\n        case SAVE_PHOTO: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}};\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPost = (newPostText: string) => {\r\n    return {type: 'ADD-POST', newPostText: newPostText} as const\r\n}\r\nexport const setUserProfile = (profile: ProfileInfoType) => {\r\n    return {type: \"SET_USER_PROFILE\", profile} as const\r\n}\r\nexport const setStatus = (status: string) => {\r\n    return {type: \"SET_STATUS\", status} as const\r\n}\r\nexport const deletePost = (postId: string) => {\r\n    return {type: \"DELETE_POST\", postId} as const\r\n}\r\nexport const savePhotoSuccess = (photos: string) => {\r\n    return {type: \"SAVE_PHOTO\", photos} as const\r\n}\r\n\r\n\r\nexport const getUserProfile = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        profileApi.authUser(userId).then((response) => {\r\n            dispatch(setUserProfile(response))\r\n        })\r\n    }\r\n}\r\nexport const getStatus = (userId: number) => async (dispatch: Dispatch) => {\r\n    const response = await profileApi.getStatus(userId)\r\n    dispatch(setStatus(response))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    const response = await profileApi.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const savePhoto = (file: string) => async (dispatch: Dispatch) => {\r\n    const response = await profileApi.savePhotos(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.photos))\r\n    }\r\n}\r\n\r\nexport default profileReducer"],"sourceRoot":""}