{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogsReducer.tsx","components/img/preloader.svg","common/Preloader/Preloader.tsx","api/api.ts","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","components/img/carrot.svg","components/Header/Header.tsx","redux/authReducer.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","utils/objectHelpers.tsx","redux/usersReducer.tsx","components/img/monkey.png","components/Users/User.tsx","common/Pagination/Pagination.tsx","components/Users/Users.tsx","redux/usersSelectors.ts","components/Users/UsersContainer.tsx","redux/appReducer.tsx","redux/reduxStore.tsx","hoc/WithSuspense.tsx","App.tsx","index.tsx","common/FormsControls/FormsControls.tsx","common/FormsControls/FormsControls.module.css","utils/validators/validators.ts","components/Header/Header.module.css","components/Users/Users.module.css","redux/profileReducer.tsx"],"names":["module","exports","ADD_MESSAGE","initialState","dialogs","id","name","messages","message","addMessageAC","type","dialogsReducer","state","action","newUserMessage","newState","push","Preloader","src","prealoder","alt","instance","axios","create","withCredentials","headers","baseURL","usersApi","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","headerApi","authMe","login","email","password","rememberMe","captcha","logout","profileApi","authUser","getStatus","updateStatus","status","put","Navbar","className","s","nav","item","navLink","activeClassName","active","to","Music","News","Settings","Header","props","header","logo","loginBlock","isAuth","onClick","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","formData","console","log","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","FOLLOWING_IN_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","acceptFollow","acceptUnfollow","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","filter","User","user","style","width","height","photos","small","userPhoto","disabled","some","st","btnFollow","btnUnfollow","Pagination","page","pageCount","productTotalCount","getPage","paginationStyle","title","buttonStyle","pages","selectStyle","lastPage","Math","ceil","i","background","color","cursor","p","margin","minHeight","justifyContent","alignItems","display","flexDirection","marginLeft","marginRight","Users","totalItemsCount","onPageChanged","fontSize","textShadow","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","compose","bind","totalCount","INITIALIZED_SUCCESS","initialized","initializeApp","promise","Promise","all","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","horizontalLine","verticalLine","path","render","AppContainer","withRouter","JSApp","ReactDOM","document","getElementById","FormControl","input","meta","touched","children","hasError","styles","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likeCount","profile","aboutMe","contacts","facebook","website","vk","twitter","instagram","github","mainLink","youtube","fullName","lookingForAJob","lookingForAJobDescription","large","addPost","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,uBAAuB,QAAU,0B,sFCC5GC,EAAc,cAIhBC,EAAe,CACfC,QAAS,CACL,CACIC,GAAI,EACJC,KAAM,UAEV,CACID,GAAI,EACJC,KAAM,UAEV,CACID,GAAI,EACJC,KAAM,SAEV,CACID,GAAI,EACJC,KAAM,SAEV,CACID,GAAI,EACJC,KAAM,SAGdC,SAAU,CACN,CACIF,GAAI,EACJG,QAAS,SAEb,CACIH,GAAI,EACJG,QAAS,aAEb,CACIH,GAAI,EACJG,QAAS,eA6BRC,EAAe,SAACD,GACzB,MAAO,CAACE,KAAM,cAAeF,QAASA,IAM3BG,IA/BQ,WAAiE,IAAhEC,EAA+D,uDAAvCT,EAAcU,EAAyB,uCAEnF,OAAQA,EAAOH,MACX,KAAKR,EACD,IAAIY,EAA8B,CAC9BT,GAAI,EACJG,QAASK,EAAOL,SAGhBO,EAAQ,eAAOH,GAInB,OAHAG,EAASR,SAAT,YAAwBK,EAAML,UAC9BQ,EAASR,SAASS,KAAKF,GAEhBC,EAMX,QACI,OAAOH,K,0CCjEJ,MAA0B,sC,OCY1BK,IATG,WACd,OACI,8BACI,qBAAKC,IAAKC,EACLC,IAAI,kB,gCCPrB,mHAGMC,EAHN,OAGiBC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,CACL,UAAW,wCAEfC,QAAS,iDAGAC,EAAW,CACpBC,SADoB,SACXC,EAAqBC,GAC1B,OAAOT,EAASU,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BC,OAPoB,SAObC,GACH,OAAOf,EAASgB,KAAT,iBAAwBD,IAC1BJ,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BI,SAboB,SAaXF,GACL,OAAOf,EAASkB,OAAT,iBAA0BH,IAC5BJ,MAAK,SAAAC,GACF,OAAOA,EAASC,UAKnBM,EAAY,CACrBC,OADqB,WAEjB,OAAOpB,EAASU,IAAT,WACFC,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BQ,MAPqB,SAOfC,EAAeC,GAAsD,IAApCC,EAAmC,wDAAhBC,EAAgB,wDACtE,OAAOzB,EAASgB,KAAT,aAA4B,CAACM,QAAOC,WAAUC,aAAWC,YAC3Dd,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5Ba,OAbqB,WAcjB,OAAO1B,EAASkB,OAAT,cACFP,MAAK,SAAAC,GACF,OAAOA,EAASC,UAKnBc,EAAa,CACtBC,SADsB,SACbb,GACL,OAAOf,EAASU,IAAI,WAAaK,GAC5BJ,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BgB,UAPsB,SAOZd,GACN,OAAOf,EAASU,IAAI,kBAAoBK,GACnCJ,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BiB,aAbsB,SAaTC,GACT,OAAO/B,EAASgC,IAAT,iBAA+B,CAACD,WAClCpB,MAAK,SAAAC,GACF,OAAOA,EAASC,W,2MC3CjBoB,EArBA,WACX,OACI,sBAAKC,UAAWC,IAAEC,IAAlB,UACI,qBAAKF,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,WAA7D,uBACJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,WAA7D,wBACJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,SAA7D,qBACJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,QAA7D,oBACJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,SAA7D,qBACJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAWC,IAAEG,QAASC,gBAAiBJ,IAAEK,OAAQC,GAAG,YAA7D,wBACJ,4B,QCVGC,EARD,WACV,OACI,yCCOOC,EARF,WACT,OACI,wCCKOC,EARE,WACb,OACI,4C,OCJO,MAA0B,mC,iBCmB1BC,EAZA,SAACC,GACZ,OACI,yBAAQZ,UAAWC,IAAEY,OAArB,UACI,qBAAKlD,IAAKmD,EAAMjD,IAAI,SAEpB,qBAAKmC,UAAWC,IAAEc,WAAlB,SACKH,EAAMI,OACD,gCAAMJ,EAAMzB,MAAZ,MAAqB,wBAAQ8B,QAASL,EAAMpB,OAAvB,wBACrB,cAAC,IAAD,CAASe,GAAI,SAAb,yB,iDCRhBW,EAAgB,qCAElBtE,EAAe,CACfE,GAAI,GACJqC,MAAO,UACPC,MAAO,GAEP4B,QAAQ,GAcCG,EAAkB,SAACrE,EAAYqC,EAAaC,EAAa4B,GAClE,MAAQ,CAAC7D,KAAM+D,EAAeE,QAAS,CAACtE,KAAIqC,QAAOC,QAAO4B,YAGjDK,EAAkB,yDAAM,WAAOC,GAAP,uBAAAC,EAAA,sEACZtC,IAAUC,SADE,OAEL,KADxBR,EAD6B,QAEpB8C,aAAmB,EACH9C,EAASC,KAA7B7B,EADsB,EACtBA,GAAIqC,EADkB,EAClBA,MAAOC,EADW,EACXA,MAChBkC,EAASH,EAAgBrE,EAAIqC,EAAOC,GAAO,KAJd,2CAAN,uDAsBhBqC,EArCK,WAA+D,IAA9DpE,EAA6D,uDAAvCT,EAAcU,EAAyB,uCAC9E,OAAQA,EAAOH,MACX,KAAK+D,EACD,OAAO,2BACA7D,GACAC,EAAO8D,SAElB,QACI,OAAO/D,ICLbqE,E,4JAEF,WACI,OACI,cAAC,EAAD,eAAYC,KAAKf,Y,GAJCgB,IAAMC,WAcrBC,eALF,SAACzE,GAAD,MAA8C,CACvD2D,OAAQ3D,EAAM0E,KAAKf,OACnB7B,MAAO9B,EAAM0E,KAAK5C,SAGO,CAACkC,kBAAiB7B,ODczB,yDAAM,WAAO8B,GAAP,SAAAC,EAAA,sEACDtC,IAAUO,SADT,OAEI,IAFJ,OAEXgC,YACTF,EAASH,EAAgB,GAAI,KAAM,MAAM,IAHrB,2CAAN,wDCdPW,CAAyCJ,G,0CCFlDM,EAAiBC,YAAwB,CAACC,KAAM,SAA/BD,EAhBsC,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MACzE,OACI,uBAAMC,SAAUF,EAAhB,UACKG,YAAY,QAAS,QAAS,CAACC,KAAWC,KAC1CF,YAAY,WAAY,WACrB,CAACC,KAAWC,IAAO,CAACrF,KAAM,aAC7BmF,YAAY,OAAQ,aACjB,GAAIE,IAAO,CAACrF,KAAM,YAAa,eAElCiF,GAAS,qBAAKpC,UAAWC,IAAEwC,iBAAlB,SAAqCL,IAC/C,8BACI,mDA0BDN,eAJF,SAACzE,GAAD,MAAiB,CAC1B2D,OAAQ3D,EAAM0E,KAAKf,UAGQ,CAAC7B,MFdX,SAACC,EAAeC,EAAkBC,GAAlC,8CAAoE,WAAMgC,GAAN,iBAAAC,EAAA,sEAC9DtC,IAAUE,MAAMC,EAAOC,EAAUC,GAD6B,OAEzD,KADtBZ,EAD+E,QAExE8C,WACTF,EAASD,MAELpE,EAAUyB,EAAS1B,SAAS0F,OAAS,EAAIhE,EAAS1B,SAAS,GAAK,aACpEsE,EAASqB,YAAW,QAAS,CAACC,OAAQ3F,MAN2C,2CAApE,wDEcN6E,EAnBD,SAAClB,GAKX,OAAIA,EAAMI,OACC,cAAC,IAAD,CAAUT,GAAI,aAGrB,gCACI,uCACA,cAACyB,EAAD,CAAgBK,SAVP,SAACQ,GACdC,QAAQC,IAAIF,GACZjC,EAAMzB,MAAM0D,EAAS1D,MAAO0D,EAASxD,SAAUwD,EAASvD,qB,QCrCnD0D,EAAsB,SAACC,EAAWC,EAAYC,EAAiBC,GACxEH,EAAMI,KAAI,SAACC,GACP,OAAIA,EAAEH,KAAiBD,EACZ,2BAAII,GAAMF,GAEdE,MCCTC,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAAwB,wBAE1BjH,GAAe,CACfkH,MAAO,GACPvF,SAAU,EACVwF,gBAAiB,EACjBzF,YAAa,EACb0F,YAAY,EACZC,oBAAqB,IAkDZC,GAAe,SAACrF,GACzB,MAAO,CAAC1B,KAAMoG,EAAQ1E,WAEbsF,GAAiB,SAACtF,GAC3B,MAAO,CAAC1B,KAAMqG,EAAU3E,WAKfuF,GAAiB,SAAC9F,GAC3B,MAAO,CAACnB,KAAMuG,EAAkBpF,gBAKvB+F,GAAmB,SAACL,GAC7B,MAAO,CAAC7G,KAAMyG,EAAoBI,eAEzBM,GAA0B,SAACN,EAAqBnF,GACzD,MAAO,CAAC1B,KAAM0G,EAAuBG,aAAYnF,WAe/C0F,GAAkB,uCAAG,WAAOjD,EAAoBzC,EAAgB2F,EAAgBC,GAA3D,SAAAlD,EAAA,6DACvBD,EAASgD,IAAwB,EAAMzF,IADhB,SAEA2F,EAAU3F,GAFV,OAGN,IAHM,QAInByC,EAASmD,EAAc5F,IAE3ByC,EAASgD,IAAwB,EAAOzF,IANjB,2CAAH,4DAsBT6F,GAvGM,WAAgE,IAA/DrH,EAA8D,uDAAvCT,GAAcU,EAAyB,uCAChF,OAAQA,EAAOH,MACX,KAAKoG,EACD,OAAO,2BACAlG,GADP,IAEIyG,MAAOd,EAAoB3F,EAAMyG,MAAOxG,EAAOuB,OAAQ,KAAM,CAAC8F,UAAU,MAShF,KAAKnB,EACD,OAAO,2BACAnG,GADP,IAGIyG,MAAOd,EAAoB3F,EAAMyG,MAAOxG,EAAOuB,OAAQ,KAAM,CAAC8F,UAAU,MAEhF,KAAKlB,EACD,OAAO,2BACApG,GADP,IACcyG,MAAOxG,EAAOwG,QAEhC,KAAKJ,EACD,OAAO,2BACArG,GADP,IACciB,YAAahB,EAAOgB,cAEtC,KAAKqF,EACD,OAAO,2BACAtG,GADP,IACc0G,gBAAiBzG,EAAOyG,kBAE1C,KAAKH,EACD,OAAO,2BACAvG,GADP,IACc2G,WAAY1G,EAAO0G,aAErC,KAAKH,EACD,OAAO,2BACAxG,GADP,IAEI4G,oBAAqB3G,EAAO0G,WAAP,sBACX3G,EAAM4G,qBADK,CACgB3G,EAAOuB,SACtCxB,EAAM4G,oBAAoBW,QAAO,SAAC9H,GAAD,OAAaA,GAAMQ,EAAOuB,YAEzE,QACI,OAAOxB,I,6BCnEJ,OAA0B,mCC0D1BwH,GA3CuB,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAMb,EAA2C,EAA3CA,oBAAqBlF,EAAsB,EAAtBA,SAAUH,EAAY,EAAZA,OAEzE,OACI,gCACQ,iCACI,8BACI,cAAC,IAAD,CAAS2B,GAAI,YAAcuE,EAAKhI,GAAhC,SACA,qBACIiI,MAAO,CACHC,MAAO,QACPC,OAAQ,SAEZtH,IAA0B,MAArBmH,EAAKI,OAAOC,MAAgBL,EAAKI,OAAOC,MACvCC,GAAWvH,IAAI,SAG7B,8BAEQiH,EAAKH,SACC,wBAAQU,SAAUpB,EAAoBqB,MAAK,SAACxI,GAAD,OAAQA,IAAOgI,EAAKhI,MACvDkD,UAAWuF,KAAGC,UAAWvE,QAAS,WACxClC,EAAS+F,EAAKhI,KAFhB,sBAKF,wBAAQuI,SAAUpB,EAAoBqB,MAAK,SAACxI,GAAD,OAAaA,IAAOgI,EAAKhI,MAC5DkD,UAAWuF,KAAGE,YAAaxE,QAAS,WACxCrC,EAAOkG,EAAKhI,KAFhB,yBAOpB,iCACgB,8BAAMgI,EAAK/H,OACX,8BAAM+H,EAAKjF,YAE3B,iCACgB,8BAAM,uBACN,8BAAM,2BCkFnB6F,GAvHgC,SAAC,GAW5C,IAJE,IALEC,EAKH,EALGA,KAAMC,EAKT,EALSA,UAAWC,EAKpB,EALoBA,kBAAmBC,EAKvC,EALuCA,QAEbC,GAG1B,EAHGC,MAGH,EAH0BD,iBACvBE,EAEH,EAFGA,YAGAC,GADH,EAFgBC,YAGL,IACNC,EAAWC,KAAKC,KAAKT,EAAoBD,GAF9C,WAIQW,GAA2BL,EAAMzI,KACtC,wBAEIsH,MAAK,yBACDyB,WAAYb,IAASY,EAAI,OAAS,UAAaN,GAD9C,IAEDQ,MAAO,QACPC,OAAQ,YAGZzF,QAAS,kBAAM6E,EAAQS,EAAGX,IAR9B,SAUKW,GATIA,KAFJA,EAAI,EAAGA,GAAKH,EAAUG,IAA/B,EAASA,GAeJZ,EAAO,EAAKS,IACbF,EAAMP,EAAO,GACT,sBAAqBZ,MAAO,CACxB0B,MAAO,SADX,oBAAWd,EAAO,GAOtBO,EAAQA,EAAMtB,QAAO,SAAC+B,EAAGJ,GAAJ,OAAUA,EAAKZ,EAAO,GAAMY,IAAOH,EAAW,MAEnET,EAAO,IACPO,EAAM,GACF,sBAAcnB,MAAO,CACjB0B,MAAO,QACPD,WAAY,SACZE,OAAQ,WAHZ,oBAAW,GASfR,EAAQA,EAAMtB,QAAO,SAAC+B,EAAGJ,GAAJ,OAAUA,EAAI,GAAKA,EAAIZ,EAAO,MAkBvD,OACI,qBAAKZ,MAAK,yBACN6B,OAAQ,SAAUC,UAAW,OAAQC,eAAgB,SACrDC,WAAY,SAAUC,QAAS,QAAWjB,GAFpC,IAEqDkB,cAAe,WAF9E,SAMI,sBAAKlC,MAAO,CACRiC,QAAS,QADb,UAcI,qBAAKjC,MAAO,CACRmC,WAAY,MACZC,YAAa,MACbH,QAAS,QAHb,SAKI,wBAAQjC,MAAO,CACX0B,MAAO,QACPD,WAAY,SACZE,OAAQ,WAEVzF,QA/CD,WACb6E,EAAQH,EAAO,EAAGC,IAyCN,oBAQHM,EACD,qBAAKnB,MAAO,CACRmC,WAAY,MACZC,YAAa,MACbH,QAAS,QAHb,SAKI,wBAAQjC,MAAO,CACX0B,MAAO,QACPD,WAAY,SACZE,OAAQ,WAEVzF,QAtDD,WACb6E,EAAQH,EAAO,EAAGC,IAgDN,0BClELwB,GAvCyB,SAAC,GAGO,IAFHtD,EAEE,EAFFA,MAAOuD,EAEL,EAFKA,gBACP9I,EACE,EADFA,SAAU+I,EACR,EADQA,cAAehJ,EACvB,EADuBA,YAAgBsC,EACvC,qFAC3C,OACI,gCACI,qBAAKmE,MAAO,CACRwC,SAAU,YACVP,QAAS,OACTF,eAAgB,SAChBL,MAAO,SACPe,WAAY,iBALhB,mBAUA,cAAC,GAAD,CAAY7B,KAAMrH,EAAasH,UAAWrH,EAC9BsH,kBAAmBwB,EAAiBvB,QAASwB,IAYzD,oCAAOxD,EAAMT,KAAI,SAACC,GAAD,OACb,cAAC,GAAD,CAAiBwB,KAAMxB,EACjBW,oBAAqBrD,EAAMqD,oBAC3BrF,OAAQgC,EAAMhC,OAAQG,SAAU6B,EAAM7B,UAFjCuE,EAAExG,c,kBC5ChBuB,GAAW,SAAChB,GACrB,OAAOA,EAAMoK,UAAU3D,OAEd4D,GAAc,SAACrK,GACxB,OAAOA,EAAMoK,UAAUlJ,UAEdoJ,GAAqB,SAACtK,GAC/B,OAAOA,EAAMoK,UAAU1D,iBAEd6D,GAAiB,SAACvK,GAC3B,OAAOA,EAAMoK,UAAUnJ,aAEduJ,GAAgB,SAACxK,GAC1B,OAAOA,EAAMoK,UAAUzD,YAEd8D,GAAyB,SAACzK,GACnC,OAAOA,EAAMoK,UAAUxD,qBCyBrB8D,G,4MAMFT,cAAgB,SAACU,GACb,EAAKpH,MAAMvC,SAAS2J,EAAY,EAAKpH,MAAMrC,W,uDAL/C,WACIoD,KAAKf,MAAMvC,SAASsD,KAAKf,MAAMtC,YAAaqD,KAAKf,MAAMrC,Y,oBAO3D,WACI,OAAO,qCACFoD,KAAKf,MAAMoD,WAAa,cAACtG,GAAA,EAAD,IAAe,KACxC,cAAC,GAAD,CACI2J,gBAAiB1F,KAAKf,MAAMmD,gBAC5BxF,SAAUoD,KAAKf,MAAMrC,SACrBD,YAAaqD,KAAKf,MAAMtC,YACxBgJ,cAAe3F,KAAK2F,cACpBxD,MAAOnC,KAAKf,MAAMkD,MAClBlF,OAAQ+C,KAAKf,MAAMhC,OACnBG,SAAU4C,KAAKf,MAAM7B,SACrBkF,oBAAqBtC,KAAKf,MAAMqD,6B,GArBnBrC,IAAMC,WAiDpBoG,gBACXnG,aAZO,SAACzE,GACR,MAAO,CACHyG,MAAOzF,GAAShB,GAChBkB,SAAUmJ,GAAYrK,GACtB0G,gBAAiB4D,GAAmBtK,GACpCiB,YAAasJ,GAAevK,GAC5B2G,WAAY6D,GAAcxK,GAC1B4G,oBAAqB6D,GAAuBzK,MAM5C,CACIuB,ONiBU,SAACC,GACnB,8CAAO,WAAOyC,GAAP,eAAAC,EAAA,sDACGiD,EAAYpG,IAASQ,OAAOsJ,KAAK9J,KAEvCmG,GAAmBjD,EAAUzC,EAAQ2F,EADfN,IAFnB,2CAAP,uDMjBQnF,SNuBY,SAACF,GACrB,8CAAO,WAAOyC,GAAP,eAAAC,EAAA,sDACGiD,EAAYpG,IAASW,SAASmJ,KAAK9J,KAEzCmG,GAAmBjD,EAAUzC,EAAQ2F,EADfL,IAFnB,2CAAP,uDMvBQ9F,SNLgB,SAACsH,EAAcpH,GACvC,8CAAO,WAAO+C,GAAP,eAAAC,EAAA,6DACHD,EAAS+C,IAAiB,IAC1B/C,EAAS8C,GAAeuB,IAFrB,SAIoBvH,IAASC,SAASsH,EAAMpH,GAJ5C,OAIGG,EAJH,OAMH4C,EAAS+C,IAAiB,IAC1B/C,GAxBiBwC,EAwBCpF,EAASuE,MAvBxB,CAAC9F,KAAMsG,EAAWK,WAwBrBxC,GAnB2ByC,EAmBCrF,EAASyJ,WAlBlC,CAAChL,KAAMwG,EAAuBI,qBAU9B,iCAXuB,IAACA,EANVD,IAiBd,OAAP,uDMKQM,kBACAE,6BAPG2D,CASbF,IChGIK,GAAsB,sBAExBxL,GAAe,CACfyL,aAAa,GAmBJC,GAAgB,kBAAe,SAAChH,GACzC,IAAIiH,EAAUjH,EAASD,KACvBmH,QAAQC,IAAI,CAACF,IACR9J,MAAK,WACF6C,EAPA,CAACnE,KAAMiL,UAYJM,GAxBI,WAAyD,IAAxDrL,EAAuD,uDAAvCT,GAAcU,EAAyB,uCACvE,OAAQA,EAAOH,MACX,KAAKiL,GACD,OAAO,2BACA/K,GADP,IAEIgL,aAAa,IAErB,QACI,OAAOhL,I,uCCTfsL,GAAWC,aAAgB,CAC3BC,YAAaC,KACbC,YAAa3L,KACbqK,UAAW/C,GACX3C,KAAMN,EACNS,KAAM8G,KACNC,IAAKP,KAMLQ,GAAQC,aAAYR,GAAUS,aAAgBC,OACjDC,OAAeJ,MAAQA,GACTA,UCZAK,GAXM,SAAC1H,GAElB,OAAO,SAACjB,GACJ,OAAO,cAAC,IAAM4I,SAAP,CAAgBC,SAAU,6CAA1B,SACH,cAAC5H,EAAD,eAAejB,QCYrB8I,GAAmB9H,IAAM+H,MAAK,kBAAM,iCACpCC,GAAmBhI,IAAM+H,MAAK,kBAAM,iCAGpCE,G,uKACF,WACIvB,O,oBAGJ,WACI,IAAIwB,EAAiB,qBAAK9J,UAAU,mBAChC+J,EAAe,qBAAK/J,UAAU,iBAKlC,OACI,sBAAKA,UAAU,cAAf,UACK8J,EACD,cAAC,EAAD,IACA,cAAC,EAAD,IACCC,EACD,sBAAK/J,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOgK,KAAK,WAAWC,OAAQV,GAAaG,MAC5C,cAAC,IAAD,CAAOM,KAAK,oBAAoBC,OAAQV,GAAaK,MACrD,cAAC,IAAD,CAAOI,KAAK,SAASC,OAAQ,kBAAM,cAAC,GAAD,OACnC,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,cAAC,EAAD,OACnC,cAAC,IAAD,CAAOD,KAAK,QAAQC,OAAQ,kBAAM,cAAC,EAAD,OAClC,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,cAAC,EAAD,OACtC,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,cAAC,EAAD,iB,GAzBrCrI,IAAMC,WAoCpBqI,GAAejC,aAAQkC,IAAYrI,aAJ1B,SAACzE,GAAD,MAA0B,CACnCgL,YAAahL,EAAM4L,IAAIZ,eAG0B,CAACC,mBAAnCL,CAAoD4B,IASxDO,GAPD,SAACxJ,GACX,OAAQ,cAAC,IAAD,UACJ,cAAC,IAAD,CAAUsI,MAAOA,GAAjB,SACI,cAACgB,GAAD,SC1DZG,IAASJ,OACL,cAAC,GAAD,IACAK,SAASC,eAAe,U,gMCKfC,EAAkC,SAAC,GACmB,EADlBC,MACmB,IAAD,IADXC,KAAOC,EACI,EADJA,QAASvI,EACL,EADKA,MACnBwI,EAAc,EAAdA,SAC7CC,EAAWF,GAAWvI,EAC1B,OACI,sBAAKpC,UAAW8K,IAAOC,YAAc,KAAOF,EAAWC,IAAO1I,MAAQ,IAAtE,UACI,8BACKwI,IAEJC,GAAY,iCAAOzI,EAAQ,mBAAf,WAIZ4I,EAAW,SAACpK,GAAgB,IAChC6J,EAAoC7J,EAApC6J,MAAuBQ,GAAarK,EAA7B8J,KAA6B9J,EAAvBsK,MADkB,YACKtK,EADL,2BAEpC,OAAO,cAAC4J,EAAD,2BAAiB5J,GAAjB,aAAwB,oDAAc6J,GAAUQ,QAE9CzI,EAAQ,SAAC5B,GAAgB,IAC7B6J,EAAoC7J,EAApC6J,MAAuBQ,GAAarK,EAA7B8J,KAA6B9J,EAAvBsK,MADe,YACQtK,EADR,2BAEjC,OAAO,cAAC4J,EAAD,2BAAiB5J,GAAjB,aAAwB,iDAAW6J,GAAWQ,QAE5C3I,EAAc,SAAC6I,EAAkBpO,EAAWqO,EAC7BC,GAA2C,IAA3BzK,EAA0B,uDAAlB,GAAI0K,EAAc,uDAAP,GAC3D,OAAO,gCACH,cAAC,IAAD,aAAOH,YAAaA,EACbpO,KAAMA,EACNwO,SAAUH,EACVC,UAAWA,GACPzK,IALR,IAMC0K,O,mBCvCZ7O,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,gCCC3H,oEAAO,IAAM6F,EAAW,SAACiJ,GACrB,IAAIA,EACJ,MAAQ,qBAGCC,EAAmB,SAACC,GAAD,OAAuB,SAACF,GACpD,GAAIA,EAAM9I,OAASgJ,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,c,mBCPlCjP,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,mBCA/DD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,YAAc,6B,4NCG/DiP,EAAW,WAEXC,EAAmB,mBACnBC,EAAa,aACbC,EAAc,cAGhBlP,EAAe,CACfmP,MAAO,CACH,CACIjP,GAAI,EACJG,QAAS,QACT+O,UAAW,KAEf,CACIlP,GAAI,EACJG,QAAS,QACT+O,UAAW,IAEf,CACIlP,GAAI,EACJG,QAAS,QACT+O,UAAW,GAEf,CACIlP,GAAI,EACJG,QAAS,QACT+O,UAAW,IAInBC,QAAS,CACLC,QAAS,gCACTC,SAAU,CACNC,SAAU,uCACVC,QAAS,sCACTC,GAAI,iCACJC,QAAS,sCACTC,UAAW,wCACXC,OAAQ,qCACRC,SAAU,uCACVC,QAAS,uCAEbC,SAAU,4BACVC,gBAAgB,EAChBC,0BAA2B,GAC3B5H,OAAQ,CACJC,MAAO,GACP4H,MAAO,IAEXlO,OAAQ,GAEZgB,OAAQ,IAsCCmN,EAAU,SAACC,GACpB,MAAO,CAAC9P,KAAM,WAAY8P,YAAaA,IAK9BC,EAAY,SAACrN,GACtB,MAAO,CAAC1C,KAAM,aAAc0C,WAKnBsN,EAAiB,SAACtO,GAC3B,OAAO,SAACyC,GACJ7B,IAAWC,SAASb,GAAQJ,MAAK,SAACC,GAC9B4C,EAXD,CAACnE,KAAM,mBAAoB8O,QAWFvN,SAIvBiB,EAAY,SAACd,GAAD,8CAAoB,WAAOyC,GAAP,eAAAC,EAAA,sEAClB9B,IAAWE,UAAUd,GADH,OACnCH,EADmC,OAEzC4C,EAAS4L,EAAUxO,IAFsB,2CAApB,uDAIZkB,EAAe,SAACC,GAAD,8CAAoB,WAAOyB,GAAP,SAAAC,EAAA,sEACrB9B,IAAWG,aAAaC,GADH,OAEX,IAFW,OAE/BlB,KAAK6C,YACdF,EAAS4L,EAAUrN,IAHqB,2CAApB,uDAObiJ,IAjEQ,WAAkE,IAAjEzL,EAAgE,uDAAvCT,EAAcU,EAAyB,uCACpF,OAAQA,EAAOH,MACX,KAAKwO,EACD,IAAIyB,EAAU,CACVtQ,GAAI,EACJG,QAASK,EAAO2P,YAChBjB,UAAW,GAGXxO,EAAQ,eAAOH,GAInB,OAHAG,EAASuO,MAAT,YAAqB1O,EAAM0O,OAC3BvO,EAASuO,MAAMtO,KAAK2P,GAEb5P,EAOX,KAAKqO,EACD,IAAIrO,EAAQ,eAAOH,GAEnB,OADAG,EAASqC,OAASvC,EAAOuC,OAClBrC,EAEX,KAAKoO,EACD,OAAO,2BAAIvO,GAAX,IAAkB4O,QAAS3O,EAAO2O,UAEtC,KAAKH,EACD,OAAO,2BAAIzO,GAAX,IAAkB0O,MAAO1O,EAAM0O,MAAMnH,QAAO,SAAA+B,GAAC,OAAIA,EAAE7J,IAAMQ,EAAO+P,YAEpE,QACI,OAAOhQ,M","file":"static/js/main.c0e7d80a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1kiTy\",\"item\":\"Navbar_item__3OHr1\",\"active\":\"Navbar_active__ZMzyz\",\"navLink\":\"Navbar_navLink__1aNXk\"};","import {ActionsTypes, DialogPageType, MessageType} from \"./store\";\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE'\r\n// const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY'\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 6,\r\n            name: 'Dimych'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Andrey'\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'Sveta'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Sasha'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Petr'\r\n        }\r\n    ],\r\n    messages: [\r\n        {\r\n            id: 1,\r\n            message: 'Hello'\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'I am fine'\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'I am God!'\r\n        }\r\n    ],\r\n    // newMessageBody: 'input message'\r\n}\r\nconst dialogsReducer = (state: DialogPageType = initialState, action: ActionsTypes) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:{\r\n            let newUserMessage: MessageType = {\r\n                id: 2,\r\n                message: action.message,\r\n            }\r\n\r\n            let newState = {...state}\r\n            newState.messages = [...state.messages]\r\n            newState.messages.push(newUserMessage)\r\n            // newState.newMessageBody = ''\r\n            return newState;}\r\n    //     case UPDATE_NEW_MESSAGE_BODY:{\r\n    //         let newState = {...state}\r\n    //         newState.newMessageBody = action.newMessage\r\n    //         return newState;\r\n    //     }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageAC = (message: string) => {\r\n    return {type: \"ADD-MESSAGE\", message: message} as const\r\n}\r\n// export const updateNewMessageBodyAC = (newMessage: string) => {\r\n//     return {type: \"UPDATE-NEW-MESSAGE-BODY\", newMessage: newMessage} as const\r\n// }\r\n\r\nexport default dialogsReducer;","export default __webpack_public_path__ + \"static/media/preloader.447b3e37.svg\";","import React from 'react';\r\nimport prealoder from '../../components/img/preloader.svg';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={prealoder}\r\n                 alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"39f6779d-eaae-4bd7-8915-a34646e60614\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0'\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const headerApi = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email: string, password: string, rememberMe = false,captcha= false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe,captcha})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n    authUser(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n//@ts-ignore\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/profile\">Profile</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/dialogs\">Messages</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/users\">Users</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/news\">News</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/music\">Music</NavLink></div>\r\n            <div className={s.item}>\r\n                <NavLink className={s.navLink} activeClassName={s.active} to=\"/settings\">Settings</NavLink></div>\r\n            <div></div>\r\n        </nav>\r\n\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n// import s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","export default __webpack_public_path__ + \"static/media/carrot.70e68396.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n//@ts-ignore\r\nimport logo from '../img/carrot.svg';\r\n//@ts-ignore\r\nimport s from './Header.module.css'\r\n\r\nconst Header = (props: any) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src={logo} alt=\"logo\"/>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>)\r\n}\r\nexport default Header;","// import {v1} from \"uuid\";\r\nimport {ActionsTypes, AuthUserType} from \"./store\";\r\nimport {headerApi} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {AppThunk} from \"./reduxStore\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: '',\r\n    login: 'myLogin',\r\n    email: '',\r\n    // isFetching: false\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state: AuthUserType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAuthUserData = (id: string, login: null, email: null, isAuth: boolean) => {\r\n    return ({type: SET_USER_DATA, payload: {id, login, email, isAuth}}) as const\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    let response = await headerApi.authMe()\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data;\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunk => async dispatch => {\r\n    const response = await headerApi.login(email, password, rememberMe)\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.messages.length > 0 ? response.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const logout = () => async (dispatch: Dispatch) => {\r\n    const response = await headerApi.logout()\r\n    if (response.resultCode === 0) {\r\n        dispatch(setAuthUserData('', null, null, false))\r\n    }\r\n}\r\nexport default authReducer;","import React from 'react';\r\n// import {NavLink} from 'react-router-dom';\r\n// import logo from '../img/carrot.svg';\r\n// import s from './Header.module.css'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/authReducer\";\r\nimport {RootStateType} from \"../../redux/store\";\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n}\r\ntype MapDispatchPropsType = {\r\n    getAuthUserData: () => void,\r\n}\r\ntype PropsType = OwnPropsType\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mstp = (state: RootStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mstp, {getAuthUserData, logout})(HeaderContainer);","import React from 'react';\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n//@ts-ignore\r\nimport s from \"../../common/FormsControls/FormsControls.module.css\"\r\n\r\ntype FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"login\", [required], Input)}\r\n            {createField(\"Password\", \"password\",\r\n                [required], Input, {type: \"password\"})}\r\n            {createField(\"null\", \"rememberMe\",\r\n                [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: any) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        console.log(formData)\r\n        props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\nconst mstp = (state: any) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect((mstp), {login})(Login);\r\n\r\n\r\n","export const updateObjectInArray = (items:any, itemId:any, objPropName:any, newObjProps:any) => {\r\n    items.map((u:any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","// import {v1} from \"uuid\";\r\nimport {ActionsTypes, UsersPageType, UsersType} from \"./store\";\r\nimport {usersApi} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n                // users: [...state.users],\r\n                // users: state.users.map(u => {\r\n                //     if (u.userId === action.userId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u\r\n                // })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.users],\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            };\r\n        case FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id: any) => id != action.userId)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const acceptFollow = (userId: number) => {\r\n    return {type: FOLLOW, userId} as const\r\n}\r\nexport const acceptUnfollow = (userId: number) => {\r\n    return {type: UNFOLLOW, userId} as const\r\n}\r\nexport const setUsers = (users: Array<UsersType>) => {\r\n    return {type: SET_USERS, users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number) => {\r\n    return {type: SET_TOTAL_USERS_COUNT, totalUsersCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {type: TOGGLE_IS_FETCHING, isFetching} as const\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => {\r\n    return {type: FOLLOWING_IN_PROGRESS, isFetching, userId} as const\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n\r\n        const response = await usersApi.getUsers(page, pageSize)\r\n\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(response.items))\r\n        dispatch(setTotalUsersCount(response.totalCount))\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    const response = await apiMethod(userId)\r\n    if (response === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        const apiMethod = usersApi.follow.bind(usersApi)\r\n        const actionCreator = acceptFollow;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        const apiMethod = usersApi.unfollow.bind(usersApi)\r\n        const actionCreator = acceptUnfollow;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/monkey.c15dfcfd.png\";","import React from 'react';\r\n// @ts-ignore\r\nimport st from './Users.module.css';\r\n// @ts-ignore\r\nimport userPhoto from '../img/monkey.png';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {FollowingInProgress} from \"../../redux/store\";\r\n\r\ntype UserPropsType = {\r\n    user: any,\r\n    followingInProgress: Array<FollowingInProgress>\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n}\r\n\r\nconst User: React.FC<UserPropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img\r\n                            style={{\r\n                                width: '100px',\r\n                                height: '100px',\r\n                            }}\r\n                            src={user.photos.small != null ? user.photos.small\r\n                                : userPhoto} alt=\"\"/>\r\n                                </NavLink>\r\n                        </div>\r\n                    <div>\r\n                        {\r\n                            user.followed\r\n                                ? <button disabled={followingInProgress.some((id) => id === user.id)}\r\n                                          className={st.btnFollow} onClick={() => {\r\n                                    unfollow(user.id)\r\n                                }}>Unfollow</button>\r\n                                :\r\n                                <button disabled={followingInProgress.some((id: any) => id === user.id)}\r\n                                        className={st.btnUnfollow} onClick={() => {\r\n                                    follow(user.id)\r\n                                }}>Follow</button>\r\n                        }\r\n                            </div>\r\n                            </span>\r\n            <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                            </span>\r\n            <span>\r\n                            <div>{'u.location.country'}</div>\r\n                            <div>{'u.location.city'}</div>\r\n                            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React, {CSSProperties, ReactNode} from 'react';\r\nimport {isNumber} from \"util\";\r\n\r\ninterface IPaginationProps {\r\n    page: number;\r\n    pageCount: number;\r\n    productTotalCount: number;\r\n    getPage: (newPage: number, newPageCount: number) => void;\r\n\r\n    title?: ReactNode;\r\n    paginationStyle?: CSSProperties;\r\n    buttonStyle?: CSSProperties;\r\n    selectStyle?: CSSProperties;\r\n}\r\n\r\nconst Pagination: React.FC<IPaginationProps> = (\r\n    {\r\n        page, pageCount, productTotalCount, getPage,\r\n\r\n        title = 'Pagination ', paginationStyle,\r\n        buttonStyle, selectStyle\r\n    }\r\n) => {\r\n    let pages = [];\r\n    const lastPage = Math.ceil(productTotalCount / pageCount)\r\n\r\n    for (let i = 1; i <= lastPage; i++) pages.push((\r\n        <button\r\n            key={i}\r\n            style={{\r\n                background: page === i ? 'gold' : \"orange\", ...buttonStyle,\r\n                color: \"black\",\r\n                cursor: \"pointer\"\r\n            }\r\n            }\r\n            onClick={() => getPage(i, pageCount)}\r\n        >\r\n            {i}\r\n        </button>\r\n    ));\r\n\r\n    if ((page + 4) < lastPage) {\r\n        pages[page + 2] = (\r\n            <span key={page + 3} style={{\r\n                color: \"black\"\r\n            }\r\n            }>\r\n                - ... -\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < (page + 3) || i === (lastPage - 1));\r\n    }\r\n    if (page > 5) {\r\n        pages[1] = (\r\n            <span key={2} style={{\r\n                color: \"black\",\r\n                background: \"orange\",\r\n                cursor: \"pointer\"\r\n            }\r\n            }>\r\n                - ... -\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < 2 || i > page - 4);\r\n    }\r\n    const prevPage = () => {\r\n        getPage(page - 1, pageCount);\r\n        // if ((currentPage - 1) % pageNumberLimit == 0) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        // }\r\n    }\r\n    const nextPage = () => {\r\n        getPage(page + 1, pageCount);\r\n        // if (currentPage + 1 > maxPageNumberLimit) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        // }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            margin: '0 10px', minHeight: '50px', justifyContent: 'center',\r\n            alignItems: 'center', display: 'flex', ...paginationStyle, flexDirection: 'column'\r\n        }}>\r\n            {/*<div>{title} </div>*/}\r\n\r\n            <div style={{\r\n                display: 'flex'\r\n            }}>\r\n                {/*    <select value={pageCount} onChange={e => getPage(page, Number(e.currentTarget.value))}*/}\r\n                {/*           style={{*/}\r\n                {/*               ...selectStyle,*/}\r\n                {/*               marginRight: '5px'*/}\r\n                {/*           }}>*/}\r\n                {/*    <option value={4}>4</option>*/}\r\n                {/*    <option value={7}>7</option>*/}\r\n                {/*    <option value={10}>10</option>*/}\r\n                {/*    <option value={20}>20</option>*/}\r\n                {/*    <option value={50}>50</option>*/}\r\n                {/*</select>*/}\r\n                <div style={{\r\n                    marginLeft: '5px',\r\n                    marginRight: '5px',\r\n                    display: 'flex'\r\n                }}>\r\n                    <button style={{\r\n                        color: \"black\",\r\n                        background: \"orange\",\r\n                        cursor: \"pointer\"\r\n                    }\r\n                    } onClick={prevPage}>PREV\r\n                    </button>\r\n                </div>\r\n                {pages}\r\n                <div style={{\r\n                    marginLeft: '5px',\r\n                    marginRight: '5px',\r\n                    display: 'flex'\r\n                }}>\r\n                    <button style={{\r\n                        color: \"black\",\r\n                        background: \"orange\",\r\n                        cursor: \"pointer\"\r\n                    }\r\n                    } onClick={nextPage}>NEXT\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport {FollowingInProgress, UsersPageType} from \"../../redux/store\";\r\nimport User from \"./User\";\r\nimport Pagination from \"../../common/Pagination/Pagination\";\r\n\r\ntype UsersPropsType = {\r\n    users: UsersPageType,\r\n    pageSize: number,\r\n    totalItemsCount: number,\r\n    currentPage: number,\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: Array<FollowingInProgress>\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n}\r\n\r\nconst Users: React.FC<UsersPropsType> = ({\r\n                                             users, totalItemsCount,\r\n                                             pageSize, onPageChanged, currentPage, ...props\r\n                                         }) => {\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                fontSize: \"xxx-large\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                color: \"orange\",\r\n                textShadow: \"black 0 0 2px\"\r\n            }}>USERS\r\n            </div>\r\n            {/*<Paginator currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize}*/}\r\n            {/*           totalUsersCount={totalUsersCount}/>*/}\r\n            <Pagination page={currentPage} pageCount={pageSize}\r\n                        productTotalCount={totalItemsCount} getPage={onPageChanged}/>\r\n            {/*<div>*/}\r\n            {/*    {pages.map((p) => {*/}\r\n            {/*        return <span*/}\r\n            {/*            key={p + 1}*/}\r\n            {/*            className={currentPage === p && styles.selectedPage}*/}\r\n            {/*            onClick={(e) => {*/}\r\n            {/*                onPageChanged(p)*/}\r\n            {/*            }}>*/}\r\n            {/*                {p} </span>*/}\r\n            {/*    })}*/}\r\n            {/*</div>*/}\r\n            <div> {users.map((u: any) =>\r\n                <User key={u.id} user={u}\r\n                      followingInProgress={props.followingInProgress}\r\n                      follow={props.follow} unfollow={props.unfollow}/>\r\n            )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","import {RootStateType} from \"./store\";\r\n\r\nexport const getUsers = (state:RootStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state:RootStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state:RootStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state:RootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state:RootStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state:RootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {FollowingInProgress, RootStateType, UsersPageType} from \"../../redux/store\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/usersSelectors\";\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype MapStatePropsType = {\r\n    users: UsersPageType,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<FollowingInProgress>\r\n}\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n    getUsers: (currentPage: number, pageSize: number) => void,\r\n    setCurrentPage: (pageNumber: number) => void,\r\n    setTotalUsersCount: (totalCount: number) => void,\r\n    toggleIsFetching: (isFetching: boolean) => void,\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\nexport type PropsType = OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalItemsCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n// let mStp = (state: RootStateType) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\nlet mStp = (state: RootStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mStp,\r\n        {\r\n            follow,\r\n            unfollow,\r\n            getUsers: requestUsers,\r\n            setCurrentPage,\r\n            toggleFollowingProgress\r\n        })\r\n)(UsersContainer)","// import {v1} from \"uuid\";\r\nimport {ActionsTypes, AppType} from \"./store\";\r\nimport {getAuthUserData} from \"./authReducer\";\r\nimport {AppThunk} from \"./reduxStore\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n};\r\n\r\nconst appReducer = (state:AppType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const initializedSuccess = () => {\r\n    return ({type: INITIALIZED_SUCCESS}) as const\r\n}\r\n\r\nexport const initializeApp = ():AppThunk => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n\r\n\r\n}\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\nimport {ActionsTypes} from \"./store\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\ntype RootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, ActionsTypes>\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n(window as any).store = store\r\nexport default store;","import React from 'react';\r\n\r\nconst WithSuspense = (Component: any) => {\r\n\r\n    return (props: any) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n\r\n    }\r\n}\r\n;\r\n\r\nexport default WithSuspense;","import './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport React from 'react';\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport store, {AppStateType} from \"./redux/reduxStore\";\nimport {compose} from \"redux\";\nimport WithSuspense from \"./hoc/WithSuspense\";\n\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component<AppStateType> {\n    componentDidMount() {\n        initializeApp()\n    }\n\n    render() {\n        let horizontalLine = <div className=\"horizontalLine\"/>\n        let verticalLine = <div className=\"verticalLine\"/>\n        // if (!this.props.initialized) {\n        //     return <Preloader/>\n        // }\n\n        return (\n            <div className=\"app-wrapper\">\n                {horizontalLine}\n                <HeaderContainer/>\n                <Navbar/>\n                {verticalLine}\n                <div className=\"app-wrapper-content\">\n                    <Route path='/dialogs' render={WithSuspense(DialogsContainer)}/>\n                    <Route path='/profile/:userId?' render={WithSuspense(ProfileContainer)}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mstp = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(withRouter, connect(mstp, {initializeApp}))(App);\n\nconst JSApp = (props: any) => {\n    return (<BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>)\n}\nexport default JSApp;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport './index.css';\nimport JSApp from \"./App\";\n\nReactDOM.render(\n    <JSApp/>,\n    document.getElementById('root')\n);\n","import React from 'react'\r\n//@ts-ignore\r\nimport styles from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../utils/validators/validators\";\r\n\r\ntype FormType = {\r\n    input: any\r\n    child: any\r\n    meta: any\r\n}\r\n\r\nexport const FormControl: React.FC<FormType> = ({input, meta: {touched, error}\r\n                                                    ,children}) => {\r\n    let hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error + \" Stupid user! :)\"} </span>}\r\n        </div>\r\n    )\r\n};\r\nexport const Textarea = (props: any) => {\r\n    let {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n};\r\nexport const Input = (props: any) => {\r\n    let {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\nexport const createField = (placeholder: any, name: any, validators: any,\r\n                            component: any, props = {}, text = \"\") => {\r\n    return <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3VvqF\",\"error\":\"FormsControls_error__2htib\",\"formSummaryError\":\"FormsControls_formSummaryError__3s1EN\"};","import React from 'react';\r\n\r\nexport const required = (value: string) => {\r\n    if (value) return undefined\r\n    return (\"Field is required\");\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value:string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbol`\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ic8i\",\"loginBlock\":\"Header_loginBlock__1uuqb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFollow\":\"Users_btnFollow__1RcO0\",\"btnUnfollow\":\"Users_btnUnfollow__1M8ft\"};","import {ActionsTypes, ProfileInfoType, ProfilePageType} from \"./store\";\r\nimport {profileApi} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst DELETE_POST = \"DELETE_POST\"\r\n// const UPDATE_STATUS = \"UPDATE_STATUS\"\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 2,\r\n            message: 'Post1',\r\n            likeCount: 123\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'Post2',\r\n            likeCount: 22\r\n        },\r\n        {\r\n            id: 4,\r\n            message: 'Post3',\r\n            likeCount: 4\r\n        },\r\n        {\r\n            id: 5,\r\n            message: 'Post4',\r\n            likeCount: 5\r\n        },\r\n    ],\r\n    // newPostText: 'input message',\r\n    profile: {\r\n        aboutMe: \"Write a little about yourself\",\r\n        contacts: {\r\n            facebook: \"Write here your account facebook.com\",\r\n            website: \"Write here your account webSite.com\",\r\n            vk: \"Write here your account vk.com\",\r\n            twitter: \"Write here your account twitter.com\",\r\n            instagram: \"Write here your account instagram.com\",\r\n            github: \"Write here your account github.com\",\r\n            mainLink: \"Write here your account mainLink.com\",\r\n            youtube: \"Write here your account youtube.com\",\r\n        },\r\n        fullName: \"Write here your full name\",\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"\",\r\n        photos: {\r\n            small: \"\",\r\n            large: \"\"\r\n        },\r\n        userId: 1\r\n    },\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 2,\r\n                message: action.newPostText,\r\n                likeCount: 0\r\n            }\r\n\r\n            let newState = {...state}\r\n            newState.posts = [...state.posts]\r\n            newState.posts.push(newPost)\r\n            // newState.newPostText = ''\r\n            return newState;\r\n        }\r\n        // case UPDATE_NEW_POST_TEXT: {\r\n        //     let newState = {...state}\r\n        //     newState.newPostText = action.newText\r\n        //     return newState;\r\n        // }\r\n        case SET_STATUS: {\r\n            let newState = {...state}\r\n            newState.status = action.status\r\n            return newState;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)};\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPost = (newPostText: string) => {\r\n    return {type: 'ADD-POST', newPostText: newPostText} as const\r\n}\r\nexport const setUserProfile = (profile: ProfileInfoType) => {\r\n    return {type: \"SET_USER_PROFILE\", profile} as const\r\n}\r\nexport const setStatus = (status: string) => {\r\n    return {type: \"SET_STATUS\", status} as const\r\n}\r\nexport const deletePost = (postId: string) => {\r\n    return {type: \"DELETE_POST\", postId} as const\r\n}\r\nexport const getUserProfile = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        profileApi.authUser(userId).then((response) => {\r\n            dispatch(setUserProfile(response))\r\n        })\r\n    }\r\n}\r\nexport const getStatus = (userId: number) => async (dispatch: Dispatch) => {\r\n    const response = await profileApi.getStatus(userId)\r\n    dispatch(setStatus(response))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    const response = await profileApi.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer"],"sourceRoot":""}